{"version":3,"sources":["components/Footer.tsx","context/AppContext.ts","configuration.ts","services/lang-service.ts","components/Header.tsx","components/Alert.tsx","services/base-service.ts","types/EPageStatus.ts","containers/pictures/Create.tsx","components/Loader.tsx","containers/pictures/Details.tsx","containers/pictures/Edit.tsx","containers/pictures/Index.tsx","containers/booking/Create.tsx","containers/booking/Details.tsx","containers/booking/Index.tsx","containers/category/Create.tsx","containers/category/Details.tsx","containers/category/Edit.tsx","containers/category/Index.tsx","containers/condition/Create.tsx","containers/condition/Details.tsx","containers/condition/Edit.tsx","containers/condition/Index.tsx","containers/county/Create.tsx","containers/county/Details.tsx","containers/county/Edit.tsx","containers/county/Index.tsx","containers/city/Create.tsx","containers/city/Details.tsx","containers/city/Edit.tsx","containers/city/Index.tsx","containers/material/Create.tsx","containers/material/Details.tsx","containers/material/Edit.tsx","containers/material/Index.tsx","containers/messageForm/Create.tsx","containers/messageForm/Details.tsx","containers/messageForm/Index.tsx","containers/productMaterial/Create.tsx","containers/productMaterial/Details.tsx","containers/productMaterial/Index.tsx","containers/productMaterial/Edit.tsx","containers/products/Create.tsx","containers/products/Details.tsx","containers/products/Index.tsx","containers/products/Edit.tsx","containers/unit/Create.tsx","containers/unit/Details.tsx","containers/unit/Edit.tsx","containers/unit/Index.tsx","containers/userBooked-Products/Details.tsx","containers/userBooked-Products/Index.tsx","containers/userMessages/Details.tsx","containers/userMessages/Index.tsx","containers/appUser/Details.tsx","containers/appUser/Delete.tsx","containers/appUser/Index.tsx","containers/appUser/Edit.tsx","containers/appRole/Create.tsx","containers/appRole/Details.tsx","containers/appRole/Delete.tsx","containers/appRole/Index.tsx","containers/appRole/Edit.tsx","containers/appRole/Change.tsx","containers/home/HomeIndex.tsx","containers/search/Index.tsx","services/identity-service.ts","containers/identity/Login.tsx","containers/identity/Register.tsx","containers/Page404.tsx","containers/PageForm.tsx","App.tsx","index.tsx"],"names":["Footer","className","initialAppState","token","firstName","lastName","currentLanguage","name","nativeName","supportedLanguages","langResources","setAuthInfo","AppContext","React","createContext","AppContextProvider","Provider","Consumer","ApiBaseUrl","LangService","url","langName","this","axios","get","response","ok","status","statusCode","data","error","messages","Axios","create","baseURL","headers","EAlertClass","Header","appState","useContext","role","loadData","useCallback","a","window","localStorage","getItem","clear","state","JSON","parse","console","log","getLanguageResources","result","changeLanguage","lang","e","setItem","stringify","location","reload","useEffect","atob","split","id","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","bllAppDTO","bookings","findAProduct","href","aria-haspopup","userMessage","userMessages","aria-labelledby","messageForms","sendMessage","newMessage","products","myProduct","userBookedProduct","userBookedProducts","productMaterials","productMaterial","pictures","picture","views","shared","buttons","search","categories","category","materials","material","cities","city","counties","county","conditions","condition","units","unit","appUser","appRole","onClick","loginPartial","logout","login","register","rel","map","nativeEvent","BaseService","Authorization","apiEndpoint","getAxiosConfiguration","editData","put","postData","post","delete","EPageStatus","Alert","props","show","alertClass","message","PictureCreate","useParams","useState","setPicture","alertMessage","setAlertMessage","productData","setProduct","history","useHistory","getAll","productResult","submitClicked","preventDefault","undefined","common","required","productId","productName","push","crud","onSubmit","Danger","value","onChange","target","autoComplete","htmlFor","dropDown","select","product","description","save","index","Loader","pageStatus","Loading","Error","PictureDetails","setPageStatus","OK","editClicked","details","src","alt","edit","PictureEdit","PictureIndex","setPictures","element","icon","faTrash","deleteClicked","swal","text","deleteConfirm","dangerMode","then","willDelete","BookingCreate","setBooking","info","appUserId","reserve","until","valueAsDate","BookingDetails","pictureUrls","BookingIndex","faCamera","slice","length","style","verticalAlign","alignItems","pathname","countyName","cityName","locationDescription","categoryName","color","width","unitName","height","depth","hasTransport","defaultChecked","disabled","isBooked","conditionName","productAge","CategoryCreate","setCategory","minLength","placeholder","CategoryDetails","CategoryEdit","RowDisplay","CategoryIndex","setCategories","ConditionCreate","setCondition","ConditionDetails","ConditionEdit","ConditionIndex","CountyCreate","setCounty","CountyDetails","CountyEdit","nameId","CountyIndex","setCounties","CityCreate","setCity","CityDetails","CityEdit","CityIndex","setCities","MaterialCreate","MaterialDetails","setMaterial","MaterialEdit","MaterialIndex","MessageFormCreate","email","subject","setMessageForm","emailNotFound","messageForm","send","MessageFormDetails","dateSent","Moment","format","MessageFormIndex","ProductMaterialCreate","materialId","setProductMaterial","materialData","materialResult","ProductMaterialDetails","materialName","ProductMaterialIndex","ProductMaterialEdit","ProductCreate","unitData","setUnit","cityData","countyData","categoryData","conditionData","unitResult","cityResult","countyResult","categoryResult","conditionResult","countyId","categoryId","conditionId","valueAsNumber","min","checked","unitId","cityId","ProductDetails","ProductIndex","size","mat","ProductEdit","UnitCreate","UnitDetails","UnitEdit","UnitIndex","setUnits","UserBookedProductsDetails","UserBookedProductsIndex","userBookings","setUserBookedProducts","timeBooked","productOwner","UserMessagesDetails","setUserMessages","from","senderEmail","reply","UserMessagesIndex","view","AppUserDetails","setAppUser","firstname","lastname","username","normalizedUserName","normalizedEmail","emailConfirmed","passwordHash","securityStamp","concurrencyStamp","phoneNumber","phoneNumberConfirmed","twoFactorEnabled","lockoutEnd","lockoutEnabled","accessFailedCount","AppUserDelete","confirmation","user","AppUserIndex","users","setUser","AppRoleCreate","setAppRole","normalizedName","AppRoleDetails","AppRoleDelete","AppRoleIndex","AppRoleEdit","AppRoleChange","memberData","setAppUserMember","nonMemberData","setAppUserNonMember","userData","nonRoleData","setOutOfRole","appResult","nonResult","addTo","removeFrom","HomeIndex","searchData","setSearch","getFour","Fragment","asp-action","float","recentlyAddedProducts","SearchIndex","list","productsList","filter","IdentityService","loginData","loginDataJson","Login","password","setLoginData","logInClicked","loginProblem","account","logIn","Register","registerData","setRegisterData","confirmPassword","confirm","setConfirm","registerClicked","passwordDontMatch","alreadyRegistered","Page404","FormView","values","input","handleChange","checkbox","radio","textarea","rows","initialFormValues","PageForm","formValues","setFormValues","App","setAppState","exact","path","component","AppUserEdit","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b41d86c.chunk.js","sourcesContent":["const Footer = () => {\n    return (\n        <footer className=\"border-top footer text-muted\">\n            <div className=\"container\">\n                &copy; 2021 - React\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { ISupportedLanguage } from \"../dto/ISupportedLanguage\";\nimport { ILanguageResources } from \"../dto/ILanguageResources\";\n\nexport interface IAppState {\n    token: string | null;\n    firstName: string;\n    lastName: string;\n    supportedLanguages: ISupportedLanguage[];\n    currentLanguage: ISupportedLanguage;\n    langResources: ILanguageResources;\n    setAuthInfo: (token: string | null, firstName: string, lastName: string) => void;\n}\n\nexport const initialAppState: IAppState = {\n    token: null,\n    firstName: '',\n    lastName: '',\n    currentLanguage: { name: 'en', nativeName: 'English' },\n    supportedLanguages: [\n        {\n            \"name\": \"en\",\n            \"nativeName\": \"English\"\n        },\n        {\n            \"name\": \"et\",\n            \"nativeName\": \"eesti\"\n        }\n    ],\n    langResources: {\n        \"views\": {\n            \"shared\": {\n                \"layout\": {\n                    \"languages\": \"Select language\"\n\n                },\n                \"buttons\": {\n                    \"create\": \"Create\",\n                    \"delete\": \"Delete\",\n                    \"remove\": \"Remove\",\n                    \"save\": \"Save\",\n                    \"search\": \"Search\",\n                    \"send\": \"Send\"\n                },\n                \"loginPartial\": {\n                    \"hello\": \"Hello\",\n                    \"login\": \"Login\",\n                    \"logout\": \"Logout\",\n                    \"register\": \"Register\"\n                }\n            },\n           \n        },\n        \"bllAppDTO\": {\n            \"bookings\": {\n                \"booking\": 'Booking',\n                'findAProduct': 'Find a product',\n                \"reserve\": 'Reserve',\n                \"timeBooked\": 'Time Booked',\n                \"until\": 'Until'\n            },\n            \"categories\": {\n                \"category\": \"Category\",\n                \"name\": \"Name\"\n            },\n            \"cities\": {\n                \"city\": \"City\",\n                \"name\": \"Name\"\n            },\n            \"conditions\": {\n                \"condition\": \"Condition\",\n                \"description\": \"Description\"\n            },\n            \"counties\": {\n                \"county\": \"County\",\n                \"name\": \"Name\"\n            },\n            \"materials\": {\n                \"material\": \"Material\",\n                \"name\": \"Name\",\n                \"comment\": \"Comment\"\n            },\n            \"messageForms\": {\n                \"email\": \"Email\",\n                \"message\": \"Message\",\n                \"subject\": \"Subject\",\n                \"dateSent\": \"Date Sent\",\n                \"messageForm\": \"New Message\",\n                \"sendMessage\": \"Send Message\"\n            },\n            \"pictures\": {\n                \"picture\": \"Pictures\",\n                \"url\": \"Picture\",\n                \"productName\": \"Product description\"\n            },\n            \"productMaterials\": {\n                \"productMaterial\": \"Product material\"\n            },\n            \"products\": {\n                \"product\": \"Product\",\n                \"category\": \"Category\",\n                \"city\": \"City\",\n                \"county\": \"County\",\n                \"color\": \"Color\",\n                \"description\": \"Description\",\n                \"depth\": \"Depth\",\n                \"dateAdded\": \"Date Added\",\n                \"height\": \"Height\",\n                \"width\": \"Width\",\n                \"locationDescription\": \"Location description\",\n                \"location\": \"Location\",\n                \"hasTransport\": \"Transort\",\n                \"isBooked\": \"Booked\",\n                \"myProduct\": \"My Product\",\n                \"material\": \"Material\",\n                \"unit\": \"Unit\",\n                \"recentlyAddedProducts\": \"Recently Added Products\",\n                \"condition\": \"Condition\",\n                \"picture\": \"Picture\",\n                \"productAge\": \"Product Age\",\n                \"size\": \"Size\"\n            },\n            \"units\": {\n                \"name\": \"Name\",\n                \"unit\": \"Unit\"\n            },\n            \"userBookedProduct\": {\n                \"productOwner\": \"Product Owner\",\n                \"userBookedProducts\": \"My booked products\"\n            },\n            \"userMessage\": {\n                \"email\": \"Email\",\n                \"from\": \"From\",\n                \"message\": \"Message\",\n                \"subject\": \"Subject\",\n                \"dateSent\": \"Date Sent\",\n                \"newMessage\": \"New Message\",\n                \"senderEmail\": \"Sender Email\",\n                \"userMessages\": \"User Messages\"\n            }\n\n        },\n        \"dropDown\": {\n            \"select\": \"Please Select\"\n        },\n        \"appRole\": {\n            \"appRole\": \"App Role\",\n            \"name\": \"Name\",\n            \"addTo\": \"Add To\",\n            \"concurrencyStamp\": \"Concurrency Stamp\",\n            \"normalizedName\": \"Normalized Name\",\n            \"removeFrom\": \"Remove From\"\n\n        },\n        \"appUser\": {\n            \"appUser\": \"App User\",\n            \"email\": \"Email\",\n            \"firstname\": \"First Name\",\n            \"lastname\": \"Last Name\",\n            \"username\": \"Username\",\n            \"concurrencyStamp\": \"ConcurrencyStamp\",\n            \"emailConfirmed\": \"Email Confirmed\",\n            \"lockoutEnabled\": \"Lockout Enabled\",\n            \"lockoutEnd\": \"Lockout End\",\n            \"normalizedEmail\": \"Normalized Email\",\n            \"passwordHash\": \"Password Hash\",\n            \"phoneNumber\": \"Phone Number\",\n            \"securityStamp\": \"Security Stamp\",\n            \"accessFailedCount\": \"Access Failed Count\",\n            \"normalizedUserName\": \"Normalized User Name\",\n            \"phoneNumberConfirmed\": \"Phone Number Confirmed\",\n            \"twoFactorEnabled\": \"Two Factor Enabled\"\n\n        },\n        \"crud\": {\n            \"confirmation\": \"Are you sure you want to delete this?\",\n            \"create\": \"Create new\",\n            \"delete\": \"Delete\",\n            \"details\": \"Details\",\n            \"edit\": \"Edit\",\n            \"index\": \"Back to List\",\n            \"reply\": \"Reply\",\n            \"view\": \"View\",\n            \"changeUserRoles\": \"Change User Role\",\n            \"deleteConfirm\": \"Are sure you wish to delete this item?\"\n        },\n        \"account\": {\n            \"email\": \"Email\",\n            \"password\": \"Password\",\n            \"logIn\": \"Log In\",\n            \"confirmPassword\": \"Confirm Password\",\n            \"firstName\": \"First name\",\n            \"lastName\": \"Last name\",\n            \"register\": \"register\",\n            \"passwordDontMatch\": \"Passwords don't match!\",\n\n        },\n        \"common\": {\n            \"minLength\": \"The input is too short\",\n            \"maxLength\": \"The input is too long\",\n            \"required\": \"The value is required\",\n            \"loginProblem\": \"User/Password problem!\",\n            \"alreadyRegistered\": \"User already registered!\",\n            \"emailNotFound\": \"Email not found!\"\n           \n        }\n\n    },\n\n\n    setAuthInfo: (token: string | null, firstName: string, lastName: string): void => { }\n\n\n}\n\nexport const AppContext = React.createContext<IAppState>(initialAppState);\nexport const AppContextProvider = AppContext.Provider;\nexport const AppContextConsumer = AppContext.Consumer;\n","export const ApiBaseUrl = \"https://localhost:5001/api/v1\";","import Axios, { AxiosError } from 'axios';\nimport { ApiBaseUrl } from '../configuration';\nimport { ISupportedLanguage } from '../dto/ISupportedLanguage';\nimport { ILanguageResources } from '../dto/ILanguageResources';\nimport { IFetchResponse } from '../types/IFetchResponse';\nimport { IMessages } from '../types/IMessages';\n\nexport class LangService {\n\n    protected static axios = Axios.create({\n        baseURL: ApiBaseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    static async getSupportedLanguages(url: string = \"\", langName: string = \"\"): Promise<IFetchResponse<ISupportedLanguage[] | IMessages>> {\n\n\n        if (langName !== \"\") {\n            url = url + '?culture=' + langName;\n        }\n\n        try {\n            let response = await this.axios.get(url);\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n    static async getLanguageResources(url: string = \"\", langName: string = \"\"): Promise<IFetchResponse<ILanguageResources | IMessages>> {\n\n\n        if (langName !== \"\") {\n            url = url + '?culture=' + langName;\n        }\n\n        try {\n            let response = await this.axios.get(url);\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n}","import React, { useContext, useCallback } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { AppContext } from \"../context/AppContext\";\nimport { ILanguageResources } from '../dto/ILanguageResources';\nimport { ISupportedLanguage } from '../dto/ISupportedLanguage';\nimport { LangService } from \"../services/lang-service\";\nimport { useEffect } from \"react\";\n\n\nconst Header = () => {\n\n    const appState = useContext(AppContext);\n    let role: string = '';\n\n    const loadData = useCallback(async () => {\n\n        let data = window.localStorage.getItem('state');\n        window.localStorage.clear();\n\n        if (data != null) {\n            let state = JSON.parse(data);\n            console.log(state)\n            appState.currentLanguage = state.currentLanguage;\n            appState.supportedLanguages = state.supportedLanguages;\n            appState.langResources = state.langResources;\n            console.log(appState)\n            appState.setAuthInfo(state.token, state.firstName, state.lastName);\n        }\n\n        let result = await LangService.getLanguageResources('https://localhost:5001/api/v1/lang/GetLangResources', appState.currentLanguage.name);\n\n        if (result.ok && result.data) {\n            appState.langResources = result.data as ILanguageResources;\n\n        }\n        console.log(appState)\n\n    }, [appState])\n\n\n    const changeLanguage = async (lang: ISupportedLanguage, e: Event) => {\n        appState.currentLanguage = lang;\n        let result = await LangService.getLanguageResources('https://localhost:5001/api/v1/lang/GetLangResources', appState.currentLanguage.name);\n\n        if (result.ok && result.data) {\n\n            appState.langResources = result.data as ILanguageResources;\n\n        }\n        window.localStorage.setItem('state', JSON.stringify(appState));\n        window.location.reload();\n    }\n\n\n    useEffect(() => {\n\n        loadData();\n\n    }, [loadData]);\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n    console.log(role)\n\n    return (\n\n        <header>\n\n            <nav className=\"navbar navbar-expand-sm  navbar-toggleable-sm navbar-light  bg-light border-bottom box-shadow mb-3\">\n                <div className=\"container\">\n                    <NavLink className=\"fa fa-home text-gray\" id=\"homeButton\" to=\"/\">Home</NavLink>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"navbar-collapse collapse d-sm-inline-flex justify-content-between\">\n                        <ul className=\"navbar-nav flex-grow-1\">\n\n                            {appState.token === null ?\n                                <>\n                                    <li className=\"nav-item\">\n                                        <NavLink  className=\"nav-link text-dark\" to=\"/booking\" >{appState.langResources.bllAppDTO.bookings.findAProduct}</NavLink>\n                                    </li>\n                                </>\n                                :\n                                <>\n                                    <li className=\"nav-item\">\n                                        <NavLink  className=\"nav-link text-dark\" to=\"/booking\">{appState.langResources.bllAppDTO.bookings.findAProduct}</NavLink>\n                                    </li>\n                                    <div className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            {appState.langResources.bllAppDTO.userMessage.userMessages}\n                                        </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/messageForm\">{appState.langResources.bllAppDTO.messageForms.sendMessage}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/userMessages\">{appState.langResources.bllAppDTO.userMessage.newMessage}</NavLink>\n                                            </li>\n                                        </div>\n                                    </div>\n                                    <div className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            {appState.langResources.bllAppDTO.products.myProduct}\n                                        </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/products\">{appState.langResources.bllAppDTO.products.myProduct}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/userBooked-Products\">{appState.langResources.bllAppDTO.userBookedProduct.userBookedProducts}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/productMaterial\">{appState.langResources.bllAppDTO.productMaterials.productMaterial}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/pictures\">{appState.langResources.bllAppDTO.pictures.picture}</NavLink>\n                                            </li>\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            {appState.langResources.views.shared.buttons.search}\n                                        </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/category\">{appState.langResources.bllAppDTO.categories.category}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/material\">{appState.langResources.bllAppDTO.materials.material}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/city\">{appState.langResources.bllAppDTO.cities.city}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/county\">{appState.langResources.bllAppDTO.counties.county}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/condition\">{appState.langResources.bllAppDTO.conditions.condition}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/unit\">{appState.langResources.bllAppDTO.units.unit}</NavLink>\n                                            </li>\n\n                                        </div>\n                                    </div>\n                                </>\n\n                            }\n\n                            {role === \"Admin\" ?\n                                <>\n                                    <div className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            {appState.langResources.appUser.appUser}\n                                        </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/appUser\">{appState.langResources.appUser.appUser}</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/appRole\">{appState.langResources.appRole.appRole}</NavLink>\n                                            </li>\n\n                                        </div>\n                                    </div>\n                                </>\n                                :\n                                <>\n\n                                </>\n                            }\n\n                        </ul>\n                        <div className=\"navbar-nav\">\n\n                            {appState.token != null ?\n                                <>\n                                    <li className=\"nav-item\" id=\"nameLayout\">\n                                        <NavLink id=\"userLayout\" className='fas fa-user-alt' to=\"/account\">{appState.firstName + ' ' + appState.lastName}</NavLink>\n                                    </li>\n\n                                    <li className=\"nav-item\" >\n                                        <a href=\"/#\" onClick={() => appState.setAuthInfo(null, '', '')} className=\"nav-link text-gray\" >{appState.langResources.views.shared.loginPartial.logout}</a>\n                                    </li>\n\n                                </>\n                                :\n                                <>\n                                    <li className=\"nav-item\">\n                                        <NavLink className=\"nav-link text-gray\" to=\"/identity/login\">{appState.langResources.views.shared.loginPartial.login}</NavLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <NavLink className=\"nav-link text-gray\" to=\"/identity/register\">{appState.langResources.views.shared.loginPartial.register}</NavLink>\n                                    </li>\n\n                                </>\n\n                            }\n                            <li className=\"nav-item dropdown\">\n                                <a className=\"nav-link dropdown-toggle material-icons\" href=\"/#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <i className=\"material-icons\">&#xe894;</i>\n                                    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n                                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n                                </a>\n\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\" >\n\n                                    {appState.supportedLanguages.map(lang =>\n\n                                        <a key={lang.name} className=\"nav-link text-dark\" onClick={(e) => changeLanguage(lang, e.nativeEvent)} href=\"/#\">{lang.nativeName}</a>\n\n                                    )}\n\n                                </div>\n                            </li>\n\n                        </div>\n                    </div>\n                </div>\n            </nav>\n\n        </header >\n\n    );\n\n\n}\n\n\n\n\nexport default Header;\n","export enum EAlertClass {\n    Primary = 'alert-primary',\n    Secondary = 'alert-secondary',\n    Success = 'alert-success',\n    Danger = 'alert-danger',\n    Warning = 'alert-warning',\n    Info = 'alert-info',\n    Light = 'alert-light',\n    Dark = 'alert-dark',\n}\n\nconst Alert = (props: {show: boolean, message: string, alertClass: EAlertClass }) => {\n    \n    return props.show ? <div className={'alert ' + props.alertClass} role=\"alert\">{props.message}</div> : null;\n}\n\nexport default Alert;\n","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport { ApiBaseUrl } from '../configuration';\nimport { IFetchResponse } from '../types/IFetchResponse';\nimport { IMessages } from '../types/IMessages';\n\nexport abstract class BaseService {\n    protected static axios = Axios.create({\n        baseURL: ApiBaseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    protected static getAxiosConfiguration(token?: string): AxiosRequestConfig | undefined {\n        if (!token) return undefined;\n        const config: AxiosRequestConfig = {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        };\n        return config;\n    }\n\n    static async getAll<TEntity>(apiEndpoint: string, token?: string): Promise<IFetchResponse<TEntity[]>> {\n\n        console.log(apiEndpoint)\n        try {\n            let response = await this.axios.get<TEntity[]>(apiEndpoint, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async getFour<TEntity>(apiEndpoint: string): Promise<IFetchResponse<TEntity[]>> {\n\n        console.log(apiEndpoint)\n        try {\n            let response = await this.axios.get<TEntity[]>(apiEndpoint);\n\n            console.log(response)\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n\n\n\n\n\n\n    static async get<TEntity>(apiEndpoint: string, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let response = await this.axios.get<TEntity>(apiEndpoint, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async edit<TEntity>(apiEndpoint: string, editData: TEntity, token?: string): Promise<IFetchResponse<TEntity>> {\n\n        console.log(apiEndpoint)\n        console.log(editData)\n        try {\n            let response = await this.axios.put<TEntity>(apiEndpoint, editData, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async post<TEntity>(apiEndpoint: string, postData: TEntity, token?: string): Promise<IFetchResponse<TEntity>> {\n\n        try {\n            let response = await this.axios.post<TEntity>(apiEndpoint, postData, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async delete<TEntity>(apiEndpoint: string, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let response = await this.axios.delete<TEntity>(apiEndpoint, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };\n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n\n}\n","export enum EPageStatus {\n    Loading = \"Loading...\",\n    Error = \"Error...\",\n    OK = \"Ok\",\n}\n","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport React, { useCallback } from 'react';\n\n\nconst PictureCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [editData, setPicture] = useState({} as IPicture);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [productData, setProduct] = useState([] as IProduct[]);\n\n    let history = useHistory();\n   \n   \n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        \n\n    }, [appState, id])\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n        \n        if (editData.url === \"\" || editData.url === undefined) {\n           \n            setAlertMessage(appState.langResources.bllAppDTO.pictures.url +\" \"+ appState.langResources.common.required);        \n        } else if (editData.productId === \"\" ||  editData.productId === undefined){\n            setAlertMessage(appState.langResources.bllAppDTO.pictures.productName +\" \"+ appState.langResources.common.required);        \n\n        }else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Pictures';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/pictures')\n            } else {\n                setAlertMessage('Error')\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n\n    }, [loadData]);\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.pictures.picture}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.pictures.url}</label>\n                                <input value={editData.url} onChange={e => setPicture({ ...editData, url: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.pictures.productName}</label>\n                                <select value={editData.productName} onChange={e => setPicture({ ...editData, productId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.id}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/pictures'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default PictureCreate;","import { EPageStatus } from \"../types/EPageStatus\";\n\nconst Loader = (props: {pageStatus:EPageStatus, statusCode:  number}) => {\n    if (props.pageStatus === EPageStatus.Loading){\n        return <div className=\"alert alert-primary\" role=\"alert\">Loading...</div>;\n    }\n    if (props.pageStatus === EPageStatus.Error) {\n        return <div className=\"alert alert-danger\" role=\"alert\">Error... {props.statusCode}</div>\n    }\n    \n    return <></>;\n}\n\nexport default Loader;\n","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\n\nconst PictureDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/pictures/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.pictures.picture}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.pictures.url}</dt>\n\n                <dd className=\"col-sm-10\">\n                    <img src={picture.url} className='picture' alt='Pilt' />\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.pictures.productName}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div id=\"button\">\n                    <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                    <p id='backToList'>\n                        <Link to={'/pictures'}>{appState.langResources.crud.index}</Link>\n                    </p>\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div >\n    );\n}\n\nexport default PictureDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst PictureEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setPicture] = useState({} as IPicture);\n    const [productData, setProduct] = useState([] as IProduct[]);\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n\n\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.url === \"\" || editData.url === undefined) {\n\n            setAlertMessage(appState.langResources.bllAppDTO.pictures.url + \" \" + appState.langResources.common.required);\n        } else if (editData.productId === \"\" || editData.productId === undefined) {\n            setAlertMessage(appState.langResources.bllAppDTO.pictures.productName + \" \" + appState.langResources.common.required);   \n        }else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Pictures/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/pictures')\n            } else {\n                setAlertMessage(response.messages![0]);\n\n            }\n        }\n\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2> {appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.pictures.picture}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.pictures.url}</label>\n                                <input value={editData.url || ''} onChange={e => setPicture({ ...editData, url: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Url\" name=\"Input.Url\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.pictures.productName}</label>\n                                <select value={editData.productId || ''} onChange={e => setPicture({ ...editData, productId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.id || ''}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/pictures'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default PictureEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport swal from 'sweetalert';\n\n\nconst PictureIndex = () => {\n    const appState = useContext(AppContext);\n    const [pictures, setPictures] = useState([] as IPicture[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const element = <FontAwesomeIcon icon={faTrash} />\n\n\n    const loadData = useCallback(async () => {\n\n        let data = window.localStorage.getItem('state');\n        window.localStorage.clear();\n\n        if (data != null) {\n            let state = JSON.parse(data);\n            console.log(state)\n            appState.currentLanguage = state.currentLanguage;\n            appState.supportedLanguages = state.supportedLanguages;\n            appState.langResources = state.langResources;\n            console.log(appState)\n            appState.setAuthInfo(state.token, state.firstName, state.lastName);\n        }\n\n        console.log(appState)\n        let result = await BaseService.getAll<IPicture>('/Pictures', appState.token!);\n        console.log(result);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPictures(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    const deleteClicked = async (e: Event, id: string) => {\n\n        e.preventDefault();\n\n        console.log(id)\n        let result = await BaseService.delete<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok) {\n            window.localStorage.setItem('state', JSON.stringify(appState));\n            window.location.reload();\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.pictures.picture}</h1>\n            {appState.token != null ?\n                <>\n                    <p>\n                        <Link to={'/pictures/create'}>{appState.langResources.crud.create}</Link>\n                    </p>\n\n                </>\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            {appState.langResources.bllAppDTO.pictures.url}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.pictures.productName}\n                        </th>\n\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {pictures.map(picture =>\n                        <tr>\n\n                            <td >\n                                <img src={picture.url} className='picture' alt='Pilt' />\n\n                            </td>\n\n                            <td>\n                                {picture.productName}\n                            </td>\n                            <td>\n                                <Link to={'/pictures/' + picture.id}>{appState.langResources.crud.details}</Link> |\n                                <Link to={'/pictures/edit/' + picture.id}>{appState.langResources.crud.edit}</Link> |\n\n                                <span  onClick={(e) => swal({text: appState.langResources.crud.deleteConfirm, dangerMode: true}).then(willDelete => {if(willDelete){deleteClicked(e.nativeEvent, picture.id!)}})}>\n\n                                   <span id=\"deleteButton\" >\n                                    {element}\n                                    </span>\n                                </span>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default PictureIndex;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { IBooking } from \"../../dto/IBooking\";\n\n\nconst BookingCreate =  (props: any) => {  \n\n    const appState = useContext(AppContext);\n    const [editData, setBooking] = useState({} as IBooking);\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n    const productName = props.location.state.data;\n    const productId = props.location.state.id;\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        editData.productId = productId;\n \n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        let appUserId = info[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"];\n      \n        setAlertMessage('');\n        console.log(editData)\n      \n        editData.productId = productId;\n        editData.appUserId = appUserId;\n\n        const url = '/Bookings?culture=' + appState.currentLanguage.name;\n        let response = await BaseService.post(url, editData, appState.token!);\n\n        console.log(response)\n        if (response.statusCode >= 200 && response.statusCode < 400) {\n            history.push('/booking')\n        } else {\n            setAlertMessage(response.messages![0]);\n        }\n\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n        <div id='alignCentre'>\n            <h2>{appState.langResources.bllAppDTO.bookings.reserve}</h2 >\n     \n\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)} >\n                <div className=\"row\" >\n                    <div className=\"col-sm-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.bookings.until}</label>\n                                <input onChange={e => setBooking({ ...editData, until: e.target.valueAsDate! })} className=\"form-control\" type=\"date\" id=\"Input_Until\" name=\"Input.Until\" />\n                            </div>\n                            <dt className=\"col-sm-10\">{appState.langResources.bllAppDTO.products.description}</dt>\n\n                            <dd className=\"col-sm-10\" id='padding'>\n                                {productName}\n                        \n                            </dd>\n                            \n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.bllAppDTO.bookings.reserve}</button>\n                            </div>\n                            <p>\n                                <Link to={'/booking'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            </div>\n        </>\n    );\n}\n\nexport default BookingCreate;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\nconst BookingDetails = (props: any) => {\n\n    //get the router params\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [products, setProduct] = useState({} as IProduct || '');\n    const productId = props.location.state.data;\n\n    const loadData = useCallback(async () => {\n        console.log(productId)\n\n        let result = await BaseService.get<IProduct>('/Products/' + productId + '?culture=' + appState.currentLanguage.name);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProduct(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [productId, appState.currentLanguage.name])\n\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <>\n\n            <dt className=\"col-sm-2\">\n            <h2>{appState.langResources.bllAppDTO.pictures.picture}</h2>\n                </dt>\n            <th id='pictureLayout'>\n                {products.pictureUrls?.map(picture =>\n\n                    <div key={products.id}>\n                        <img src={picture} className='pictureIndex' key={picture} alt='Pilt' />\n\n                    </div>\n\n\n                )}\n\n            </th>\n\n            < p >\n                <Link to={'/booking'}>{appState.langResources.crud.index}</Link>\n            </p>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n\n}\n\nexport default BookingDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\nimport React, { useCallback } from 'react';\n\n\nconst BookingIndex = (props: any) => {\n\n\n    const appState = useContext(AppContext);\n    const [products, setProduct] = useState([] as IProduct[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const element = <FontAwesomeIcon icon={faCamera} />\n\n    const loadData = useCallback(async () => {\n\n        let result = await BaseService.getAll<IProduct>('/Search?culture=' + appState.currentLanguage.name);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProduct(result.data)\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n\n        }\n\n    }, [appState.currentLanguage.name])\n\n    useEffect(() => {\n        loadData();\n\n    }, [loadData]);\n\n    return (\n        <>\n\n            {products.map(product =>\n\n                <div key={product.id} className=\"mainView\">\n                    <div  className=\"boxLayout\">\n                        <table>\n                            <tbody>\n\n\n                                <tr>\n                                    <th id=\"alignCentre\">\n                                        {product.pictureUrls?.slice(product.pictureUrls.length - 1).map(picture =>\n\n                                            <div >\n                                                <img src={picture} key={picture} className='picture' alt='Pilt' />\n\n                                            </div>\n\n\n                                        )}\n\n                                    </th>\n                                    {product.pictureUrls?.length !== 0 ?\n\n                                        <>\n                                            <div style={{ verticalAlign: 'top', alignItems: 'right' }}>\n\n                                                <Link to={{\n                                                    pathname: '/booking/details',\n                                                    state: {\n                                                        data: product.id,\n                                                    },\n                                                }}>{element}</Link>\n\n                                            </div>\n\n                                        </>\n                                        :\n                                        <>\n                                        </>\n\n                                    }\n\n\n                                    <div className=\"boxLayout\" id=\"box4\">\n                                        <table>\n                                            <tbody key={product.id}>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.description}:</td>\n                                                    <td>{product.description}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.county}:</td>\n                                                    <td>{product.countyName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.city}:</td>\n                                                    <td>{product.cityName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.locationDescription}:</td>\n                                                    <td>{product.locationDescription}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    <div className=\"boxLayout\" id=\"box2\">\n                                        <table>\n                                            <tbody key={product.id}>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.category}:</td>\n                                                    <td>{product.categoryName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.color}:</td>\n                                                    <td>{product.color}</td>\n                                                </tr>\n\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.width}:</td>\n                                                    <td>{product.width}{product.unitName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.height}:</td>\n                                                    <td>{product.height}{product.unitName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.depth}:</td>\n                                                    <td>{product.depth}{product.unitName}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                    <div className=\"boxLayout\" id=\"box3\">\n                                        <table>\n                                            <tbody key={product.id}>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.hasTransport}: </td>\n                                                    <td>\n                                                        <input type=\"checkbox\" defaultChecked={product.hasTransport} disabled={true} />\n\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.isBooked}:</td>\n                                                    <td>\n                                                        <input type=\"checkbox\" defaultChecked={product.isBooked} disabled={true} />\n\n                                                    </td>\n                                                </tr>\n\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.condition}:</td>\n                                                    <td>{product.conditionName}</td>\n                                                </tr>\n\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.productAge}:</td>\n                                                    <td>{product.productAge}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.material}:</td>\n                                                    {product.material?.map(material =>\n\n                                                        <td key={material}>{material}</td>\n                                                    )}\n\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n                                    </div>\n\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n                    {appState.token != null && !product.isBooked ?\n                        <>\n\n                            <div id=\"reserveButton\">\n                                <button className=\"btn btn-primary\" style={{ verticalAlign: 'centre' }} >\n                                    <Link\n                                        to={{\n                                            pathname: '/booking/create',\n                                            state: {\n                                                data: product.description,\n                                                id: product.id\n                                            },\n                                        }}\n                                    >{appState.langResources.bllAppDTO.bookings.reserve}</Link>\n                                </button>\n                            </div>\n                        </>\n                        :\n                        <>\n\n                        </>\n\n                    }\n                </div>\n\n\n            )}\n\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default BookingIndex;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CategoryCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setCategory] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Categories?culture=' + appState.currentLanguage.name;\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/category')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.categories.category}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.categories.name}</label>\n                                <input value={editData.name} onChange={e => setCategory({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CategoryName\" name=\"Input.CategoryName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/category'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CategoryCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\nconst CategoryDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [category, setCategory] = useState({} as ICategory || '');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICategory>('/Categories/' + id + '?culture=' + appState.currentLanguage.name, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCategory(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/category/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.categories.category}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.categories.name}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {category.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                        <p id='backToList'>\n                        <Link to={'/category'}>{appState.langResources.crud.index}</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n    );\n}\n\nexport default CategoryDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\nconst CategoryEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCategory] = useState({} as ICategory || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n        console.log(appState.currentLanguage.name)\n\n        let result = await BaseService.get<ICategory>('/Categories/' + id + '?culture=' + appState.currentLanguage.name, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCategory(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Categories/' + id + '?culture=' + appState.currentLanguage.name;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/category')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.categories.category}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.categories.name}</label>\n                                <input value={editData.name || ''} onChange={e => setCategory({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CategoryName\" name=\"Input.CategoryName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/category'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default CategoryEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\n\nconst RowDisplay = (props: { category: ICategory, role: string, appState: IAppState }) => (\n    <tr>\n        <td>\n            {props.category.name}\n        </td>\n\n        <td>\n            <Link to={'/category/edit/' + props.category.id}>{props.appState.langResources.crud.edit}</Link> |\n\n            <Link to={'/category/' + props.category.id}>{props.appState.langResources.crud.details}</Link>\n        </td>\n    </tr>\n);\n\n\nconst CategoryIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [categories, setCategories] = useState([] as ICategory[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = useCallback(async () => {\n\n       \n        let result = await BaseService.getAll<ICategory>('/Categories?culture=' + appState.currentLanguage.name, appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCategories(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.categories.category}</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/category/create'}>{appState.langResources.crud.create}</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                        {appState.langResources.bllAppDTO.categories.name}\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {categories.map(category =>\n                        <RowDisplay category={category} key={category.id} role={role} appState={appState} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CategoryIndex;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ConditionCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setCondition] = useState({ description: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.description.length < 2 || editData.description.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Conditions?culture=' + appState.currentLanguage.name;\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/condition')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.conditions.condition}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.conditions.description}</label>\n                                <input value={editData.description} onChange={e => setCondition({ ...editData, description: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ConditionName\" name=\"Input.ConditionName\" placeholder={editData.description} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/condition'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ConditionCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICondition } from \"../../dto/ICondition\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst ConditionDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [condition, setCondition] = useState({} as ICondition || '');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICondition>('/Conditions/' + id+ '?culture=' + appState.currentLanguage.name, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCondition(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/condition/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.conditions.condition}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.conditions.description}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {condition.description || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                        <p id='backToList'>\n                        <Link to={'/condition'}>{appState.langResources.crud.index}</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n    );\n}\n\nexport default ConditionDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICondition } from \"../../dto/ICondition\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst ConditionEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCondition] = useState({} as ICondition || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICondition>('/Conditions/' + id + '?culture=' + appState.currentLanguage.name, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCondition(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.description.length < 2 || editData.description.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Conditions/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/condition')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.conditions.condition}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.conditions.description}</label>\n                                <input value={editData.description || ''} onChange={e => setCondition({ ...editData, description: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ConditionName\" name=\"Input.ConditionName\" placeholder={editData.description} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/condition'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default ConditionEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICondition } from \"../../dto/ICondition\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\n\nconst RowDisplay = (props: { condition: ICondition, role: string, appState: IAppState }) => (\n    <tr>\n        <td>\n            {props.condition.description}\n        </td>\n\n        <td>\n            <Link to={'/condition/edit/' + props.condition.id}>{props.appState.langResources.crud.edit}</Link> |\n\n            <Link to={'/condition/' + props.condition.id}>{props.appState.langResources.crud.details}</Link>\n        </td>\n    </tr>\n);\n\n\nconst ConditionIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [conditions, setCondition] = useState([] as ICondition[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = useCallback(async () => {\n        let result = await BaseService.getAll<ICondition>('/Conditions?culture=' + appState.currentLanguage.name, appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCondition(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.conditions.condition}</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/condition/create'}>{appState.langResources.crud.create}</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                        {appState.langResources.bllAppDTO.conditions.description}\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {conditions.map(condition =>\n                        <RowDisplay condition={condition} key={condition.id} role={role} appState={appState} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default ConditionIndex;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CountyCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setCounty] = useState({ name: ''});\n\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.name)\n\n        if(editData.name.length < 2 || editData.name.length > 128){\n            setAlertMessage(appState.langResources.common.minLength);     \n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Counties';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/county')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n\n        }\n\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.counties.county}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.counties.name}</label>\n                                <input value={editData.name} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CountyName\" name=\"Input.CountyName\" placeholder={editData.name} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/county'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CountyCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst CountyDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [county, setCounty] = useState({} as ICounty);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICounty>('/Counties/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/county/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.counties.county}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.counties.name}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {county.name}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                        <p id='backToList'>\n                        <Link to={'/county'}>{appState.langResources.crud.index}</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n    );\n}\n\nexport default CountyDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst CountyEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCounty] = useState({} as ICounty || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICounty>('/Counties/' + id, appState.token!);\n\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.nameId)\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Counties/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/county')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.counties.county}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.counties.name}</label>\n                                <input value={editData.name || ''} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CountyName\" name=\"Input.CountyName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/county'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default CountyEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\n\n\nconst RowDisplay = (props: { county: ICounty, role: string , appState: IAppState}) => (\n\n    <tr>\n        <td>\n            {props.county.name}\n        </td>\n\n        { props.role === 'Admin' ?\n            <>\n                <td>\n                    <Link to={'/county/edit/' + props.county.id}>{props.appState.langResources.crud.edit}</Link> |\n                    <Link to={'/county/' + props.county.id}>{props.appState.langResources.crud.details}</Link>\n                </td>\n\n            </>\n            :\n            <>\n                <td>\n                    <Link to={'/county/' + props.county.id}>Details</Link>\n                </td>\n            </>\n        }\n    </tr>\n);\n\n\n\nconst CountyIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [counties, setCounties] = useState([] as ICounty[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = useCallback(async () => {\n\n        console.log(appState.currentLanguage.name)\n\n        let result = await BaseService.getAll<ICounty>('/Counties?culture=' + appState.currentLanguage.name, appState.token!);\n        console.log(appState);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounties(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.counties.county}</h1>\n            {appState.token != null && role === 'Admin' ?\n\n                <p>\n                    <Link to={'/county/create'}>{appState.langResources.crud.create}</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                        {appState.langResources.bllAppDTO.counties.name}\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {counties.map(county =>\n                    \n                        <RowDisplay county={county} key={county.id} role={role} appState={appState} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CountyIndex;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setCity] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.cities.city}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.cities.name}</label>\n                                <input value={editData.name} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext} from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst CityDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [city, setCity] = useState({} as ICity || '');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/city/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.cities.city}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.cities.name}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {city.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                        <p id='backToList'>\n                        <Link to={'/city'}>{appState.langResources.crud.index}</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n    );\n}\n\nexport default CityDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst CityEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({} as ICity || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities/' + id + '?culture=' + appState.currentLanguage.name;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.cities.city}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.cities.name}</label>\n                                <input value={editData.name || ''} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default CityEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState} from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\n\nconst RowDisplay = (props: { city: ICity, role: string, appState: IAppState }) => (\n    <tr>\n        <td>\n            {props.city.name}\n        </td>\n\n        <td>\n            <Link to={'/city/edit/' + props.city.id}>{props.appState.langResources.crud.edit}</Link> |\n\n            <Link to={'/city/' + props.city.id}>{props.appState.langResources.crud.details}</Link>\n        </td>\n    </tr>\n);\n\n\nconst CityIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [cities, setCities] = useState([] as ICity[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = useCallback(async () => {\n        let result = await BaseService.getAll<ICity>('/Cities?culture=' + appState.currentLanguage.name, appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCities(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.cities.city}</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/city/create'}>{appState.langResources.crud.create}</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                        {appState.langResources.bllAppDTO.cities.name}\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map(city =>\n                        <RowDisplay city={city} key={city.id} role={role} appState={appState} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CityIndex;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MaterialCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setCounty] = useState({ name: ''});\n\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.name)\n\n        if(editData.name.length < 2 || editData.name.length > 128){\n            setAlertMessage(appState.langResources.common.minLength);     \n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Materials';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/material')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n\n        }\n\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.materials.material}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.materials.name}</label>\n                                <input value={editData.name} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_MaterialName\" name=\"Input.MaterialName\" placeholder={editData.name} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/material'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default MaterialCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IMaterial } from \"../../dto/IMaterial\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst MaterialDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [material, setMaterial] = useState({} as IMaterial);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IMaterial>('/Materials/' + id + '?culture=' + appState.currentLanguage.name, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setMaterial(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/material/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.materials.material}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.materials.name}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {material.name}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                        <p id='backToList'>\n                        <Link to={'/material'}>{appState.langResources.crud.index}</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n    );\n}\n\nexport default MaterialDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IMaterial } from \"../../dto/IMaterial\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\nconst MaterialEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCounty] = useState({} as IMaterial || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IMaterial>('/Materials/' + id + '?culture=' + appState.currentLanguage.name, appState.token!);\n\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Materials/' + id + '?culture=' + appState.currentLanguage.name;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/material')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.materials.material}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.materials.name}</label>\n                                <input value={editData.name || ''} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_MaterialName\" name=\"Input.MaterialName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/material'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default MaterialEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IMaterial } from \"../../dto/IMaterial\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\n\n\nconst RowDisplay = (props: { material: IMaterial, role: string, appState: IAppState}) => (\n\n    <tr>\n        <td>\n            {props.material.name}\n        </td>\n\n\n        { props.role === 'Admin' ?\n            <>\n                <td>\n                    <Link to={'/material/edit/' + props.material.id}>{props.appState.langResources.crud.edit}</Link> |\n                    <Link to={'/material/' + props.material.id}>{props.appState.langResources.crud.details}</Link>\n                </td>\n\n            </>\n            :\n            <>\n                <td>\n                    <Link to={'/material/' + props.material.id}>{props.appState.langResources.crud.details}</Link>\n                </td>\n            </>\n        }\n    </tr>\n);\n\n\n\nconst MaterialIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [materials, setCounties] = useState([] as IMaterial[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = useCallback(async () => {\n        let result = await BaseService.getAll<IMaterial>('/Materials?culture=' + appState.currentLanguage.name, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounties(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.materials.material}</h1>\n            {appState.token != null && role === 'Admin' ?\n\n                <p>\n                    <Link to={'/material/create'}>{appState.langResources.crud.create}</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                        {appState.langResources.bllAppDTO.materials.name}\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {materials.map(material =>\n                        <RowDisplay material={material} key={material.id} role={role} appState={appState}/>)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default MaterialIndex;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MessageFormCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setMessageForm] = useState({ email: '', subject: '', message: ''});\n\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n\n        if(editData.subject === \"\" ){\n            setAlertMessage(appState.langResources.bllAppDTO.messageForms.subject +\" \"+ appState.langResources.common.required);\n        \n        }else if (editData.message === \"\" ){\n                setAlertMessage(appState.langResources.bllAppDTO.messageForms.message +\" \"+ appState.langResources.common.required);\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n            console.log(appState.token)\n\n            const url = '/MessageForms';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/messageForm')\n            } else {\n                setAlertMessage(appState.langResources.common.emailNotFound);\n            }\n\n        }\n\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.messageForms.messageForm}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.messageForms.email}</label>\n                                <input value={editData.email} onChange={e => setMessageForm({ ...editData, email: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_MessageFormName\" name=\"Input.MessageFormName\" placeholder={editData.email} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.messageForms.subject}</label>\n                                <input value={editData.subject} onChange={e => setMessageForm({ ...editData, subject: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_MessageFormSubject\" name=\"Input.MessageFormSubject\" placeholder={editData.subject} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.messageForms.message}</label>\n                                <textarea value={editData.message} onChange={e => setMessageForm({ ...editData, message: e.target.value })} className=\"form-control\" id=\"Input_MessageFormMessage\" name=\"Input.MessageFormMessage\" placeholder={editData.message} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.send}</button>\n                            </div>\n                            <p>\n                                <Link to={'/messageForm'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n    \n        </>\n    );\n}\n\nexport default MessageFormCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IMessageForm } from \"../../dto/IMessageForm\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\nimport Moment from 'moment';\n\n\nconst MessageFormDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [messageForm, setMessageForm] = useState({} as IMessageForm);\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IMessageForm>('/MessageForms/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setMessageForm(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n\n            <h4>{appState.langResources.bllAppDTO.messageForms.message}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.messageForms.email}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {messageForm.email}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.messageForms.subject}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {messageForm.subject}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.messageForms.message}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {messageForm.message}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.messageForms.dateSent}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appState.currentLanguage.name === \"en\" ?\n\n                        <>\n                            {Moment(messageForm.dateSent).format(\"YYYY.MM.DD HH:mm:ss\")}\n                        </>\n                        :\n                        <>\n                            {Moment(messageForm.dateSent).format('DD.MM.YYYY HH:mm:ss')}\n                        </>\n\n\n                    }\n                </dd>\n                <hr />\n\n                <p id='backToList'>\n                    <Link to={'/messageForm'}>{appState.langResources.crud.index}</Link>\n                </p>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n    );\n}\n\nexport default MessageFormDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IMessageForm } from \"../../dto/IMessageForm\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport swal from 'sweetalert';\nimport Moment from 'moment';\n\nconst MessageFormIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [messageForms, setMessageForm] = useState([] as IMessageForm[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const element = <FontAwesomeIcon icon={faTrash} />\n\n    const loadData = useCallback(async () => {\n    \n\n        let data = window.localStorage.getItem('state');\n        window.localStorage.clear();\n\n        if (data != null) {\n            let state = JSON.parse(data);\n            console.log(state)\n            appState.currentLanguage = state.currentLanguage;\n            appState.supportedLanguages = state.supportedLanguages;\n            appState.langResources = state.langResources;\n            console.log(appState)\n            appState.setAuthInfo(state.token, state.firstName, state.lastName);\n        }\n        let result = await BaseService.getAll<IMessageForm>('/MessageForms', appState.token!);\n\n        console.log(result)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setMessageForm(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    const deleteClicked = async (e: Event, id: string) => {\n\n        e.preventDefault();\n\n        console.log(id)\n        let result = await BaseService.delete<IMessageForm>('/MessageForms/' + id, appState.token!);\n\n\n        if (result.ok) {\n            window.localStorage.setItem('state', JSON.stringify(appState));\n            window.location.reload();\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n    }\n  \n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.messageForms.message}</h1>\n\n            <p>\n                <Link to={'/messageForm/create'}>{appState.langResources.crud.create}</Link>\n            </p>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            {appState.langResources.bllAppDTO.messageForms.email}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.messageForms.subject}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.messageForms.message}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.messageForms.dateSent}\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {messageForms.map(messageForm =>\n                        <tr key={messageForm.id}>\n                            <td>\n                                {messageForm.email}\n                            </td>\n                            <td>\n                                {messageForm.subject}\n                            </td>\n                            <td>\n                                {messageForm.message}\n                            </td>\n                            <td >\n                              {appState.currentLanguage.name === \"en\" ?\n\n                                <>\n                                  {Moment(messageForm.dateSent).format(\"YYYY.MM.DD HH:mm:ss\")}\n                                  </>\n                                  :\n                                  <>\n                                    {Moment(messageForm.dateSent).format('DD.MM.YYYY HH:mm:ss')}\n                                  </>\n\n\n                            }\n                            \n                            </td>\n\n                            <td>\n                                <Link to={'/messageForm/' + messageForm.id}>{appState.langResources.crud.details}</Link> |\n                                <span  onClick={(e) => swal({text: appState.langResources.crud.deleteConfirm, dangerMode: true}).then(willDelete => {if(willDelete){deleteClicked(e.nativeEvent, messageForm.id!)}})}>\n\n                                   <span id=\"deleteButton\" >\n                                    {element}\n                                    </span>\n                                </span>\n                            </td>\n\n\n\n                        </tr>)}\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default MessageFormIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { IMaterial } from \"../../dto/IMaterial\";\nimport React, { useCallback } from 'react';\n\n\nconst ProductMaterialCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [editData, setProductMaterial] = useState({productId: '', materialId: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    const [productData, setProduct] = useState([] as IProduct[]);\n    const [materialData, setMaterial] = useState([] as IMaterial[]);\n\n    let history = useHistory();\n   \n   \n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n        let materialResult = await BaseService.getAll<IMaterial>('/Materials', appState.token!);\n\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        if (materialResult.ok && materialResult.data) {\n            setMaterial(materialResult.data);\n        }\n    }, [appState, id])\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n        if (editData.productId === undefined || editData.productId === \"\") {\n        \n            setAlertMessage(appState.langResources.bllAppDTO.products.product +\" \"+ appState.langResources.common.required);        \n        } else if (editData.materialId ===  undefined ||  editData.materialId === \"\"){\n            setAlertMessage(appState.langResources.bllAppDTO.productMaterials.productMaterial +\" \"+ appState.langResources.common.required);    \n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/ProductMaterials';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/productMaterial')\n            } else {\n                setAlertMessage('Error')\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n\n    }, [loadData]);\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.productMaterials.productMaterial}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.materials.material}</label>\n                                <select value={editData.materialId} onChange={e => setProductMaterial({ ...editData, materialId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {materialData.map(material =>\n                                        <option key={material.id} value={material.id}>{material.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.product}</label>\n                                <select value={editData.productId} onChange={e => setProductMaterial({ ...editData, productId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.id}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/productMaterial'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ProductMaterialCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IProductMaterial } from \"../../dto/IProductMaterial\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\n\nconst ProductMaterialDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [productMaterial, setProductMaterial] = useState({} as IProductMaterial);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IProductMaterial>('/ProductMaterials/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProductMaterial(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id]);\n\n    const editClicked = (e: Event) => {\n\n        e.preventDefault();\n        history.push('/productMaterial/Edit/' + id)\n\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.productMaterials.productMaterial}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.materials.material}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {productMaterial.materialName}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.products.product}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {productMaterial.productName}\n                </dd>\n                <hr />\n\n                <div id=\"button\">\n                    <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                    <p id='backToList'>\n                        <Link to={'/productMaterial'}>{appState.langResources.crud.index}</Link>\n                    </p>\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div >\n    );\n}\n\nexport default ProductMaterialDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IProductMaterial } from \"../../dto/IProductMaterial\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport swal from 'sweetalert';\n\n\n\nconst ProductMaterialIndex = () => {\n    const appState = useContext(AppContext);\n    const [productMaterials, setProductMaterial] = useState([] as IProductMaterial[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const element = <FontAwesomeIcon icon={faTrash} />\n\n    const loadData = useCallback(async () => {\n\n        let data = window.localStorage.getItem('state');\n        window.localStorage.clear();\n\n        if (data != null) {\n            let state = JSON.parse(data);\n            console.log(state)\n            appState.currentLanguage = state.currentLanguage;\n            appState.supportedLanguages = state.supportedLanguages;\n            appState.langResources = state.langResources;\n            console.log(appState)\n            appState.setAuthInfo(state.token, state.firstName, state.lastName);\n        }\n        console.log(appState)\n        let result = await BaseService.getAll<IProductMaterial>('/ProductMaterials', appState.token!);\n\n\n        console.log(result);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProductMaterial(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    const deleteClicked = async (e: Event, id: string) => {\n\n        e.preventDefault();\n\n        console.log(id)\n        let result = await BaseService.delete<IProductMaterial>('/ProductMaterials/' + id, appState.token!);\n\n        if (result.ok) {\n            window.localStorage.setItem('state', JSON.stringify(appState));\n            window.location.reload();\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.productMaterials.productMaterial}</h1>\n\n            <p>\n                <Link to={'/productMaterial/create'}>{appState.langResources.crud.create}</Link>\n            </p>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            {appState.langResources.bllAppDTO.materials.material}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.product}\n                        </th>\n\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {productMaterials.map(productMaterial =>\n                        <tr>\n                            <td>\n                                {productMaterial.materialName}\n                            </td>\n                            <td>\n                                {productMaterial.productName}\n                            </td>\n                            <td>\n                                <Link to={'/productMaterial/' + productMaterial.id}>{appState.langResources.crud.details}</Link> |\n                                 <Link to={'/productMaterial/edit/' + productMaterial.id}>{appState.langResources.crud.edit}</Link> |\n                                 <span onClick={(e) => swal({ text: appState.langResources.crud.deleteConfirm, dangerMode: true }).then(willDelete => { if (willDelete) { deleteClicked(e.nativeEvent, productMaterial.id!) } })}>\n\n                                    <span id=\"deleteButton\" >\n                                        {element}\n                                    </span>\n                                </span>\n                            </td>\n                        </tr>)}\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default ProductMaterialIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IProductMaterial } from \"../../dto/IProductMaterial\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { IMaterial } from \"../../dto/IMaterial\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\n\nconst ProductMaterialEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setProductMaterial] = useState({} as IProductMaterial);\n    const [productData, setProduct] = useState([] as IProduct[]);\n    const [materialData, setMaterial] = useState([] as IMaterial[]);\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IProductMaterial>('/ProductMaterials/' + id, appState.token!);\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n        let materialResult = await BaseService.getAll<IMaterial>('/Materials', appState.token!);\n\n\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n        if (materialResult.ok && materialResult.data) {\n            setMaterial(materialResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProductMaterial(result.data);\n\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        setAlertMessage('');\n        console.log(editData)\n\n        if (editData.productId === undefined || editData.productId === \"\") {\n\n            setAlertMessage(appState.langResources.bllAppDTO.products.product + \" \" + appState.langResources.common.required);\n        } else if (editData.materialId === undefined || editData.materialId === \"\") {\n            setAlertMessage(appState.langResources.bllAppDTO.productMaterials.productMaterial + \" \" + appState.langResources.common.required);\n        } else {\n            const url = '/ProductMaterials/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/productMaterial')\n            } else {\n                setAlertMessage(response.messages![0]);\n\n            }\n\n        }\n\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2> {appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.productMaterials.productMaterial}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.materials.material}</label>\n                                <select value={editData.materialId || ''} onChange={e => setProductMaterial({ ...editData, materialId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    {materialData.map(material =>\n                                        <option key={material.id} value={material.id || ''}>{material.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.product}</label>\n                                <select value={editData.productId || ''} onChange={e => setProductMaterial({ ...editData, productId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.id || ''}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/productMaterial'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default ProductMaterialEdit;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { ICity } from \"../../dto/ICity\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { ICondition } from \"../../dto/ICondition\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\n\nconst ProductCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setProduct] = useState({} as IProduct);\n    const [unitData, setUnit] = useState([] as IUnit[]);\n    const [cityData, setCity] = useState([] as ICity[]);\n    const [countyData, setCounty] = useState([] as ICounty[]);\n    const [categoryData, setCategory] = useState([] as ICategory[]);\n    const [conditionData, setCondition] = useState([] as ICondition[]);\n\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n    console.log(\"seal\")\n\n    const loadData = useCallback(async () => {\n \n        console.log(\"siin\")\n        console.log(appState.currentLanguage.name)\n\n        let unitResult = await BaseService.getAll<IUnit>('/Units?culture=' + appState.currentLanguage.name, appState.token!);\n        if (unitResult.ok && unitResult.data) {\n            setUnit(unitResult.data);\n        }\n\n\n        let cityResult = await BaseService.getAll<ICity>('/Cities?culture=' + appState.currentLanguage.name, appState.token!);\n        if (cityResult.ok && cityResult.data) {\n            setCity(cityResult.data);\n        }\n\n\n        let countyResult = await BaseService.getAll<ICounty>('/Counties?culture=' + appState.currentLanguage.name, appState.token!);\n        if (countyResult.ok && countyResult.data) {\n            setCounty(countyResult.data);\n        }\n\n\n        let categoryResult = await BaseService.getAll<IUnit>('/Categories?culture=' + appState.currentLanguage.name, appState.token!);\n        if (categoryResult.ok && categoryResult.data) {\n            setCategory(categoryResult.data);\n        }\n\n\n        let conditionResult = await BaseService.getAll<ICondition>('/Conditions?culture=' + appState.currentLanguage.name, appState.token!);\n        if (conditionResult.ok && conditionResult.data) {\n            setCondition(conditionResult.data);\n        }\n\n\n    }, [appState])\n\n    const submitClicked = async (e: Event) => {\n        e.preventDefault();\n        console.log(editData.description)\n        if ( editData.description === undefined) {\n            setAlertMessage(appState.langResources.bllAppDTO.products.description +\" \"+ appState.langResources.common.required);   \n        } else if (editData.description.length < 2 ){\n            setAlertMessage(appState.langResources.bllAppDTO.products.description +\" \"+ appState.langResources.common.minLength);      \n        } else if (editData.countyId ===  undefined ){\n            setAlertMessage(appState.langResources.bllAppDTO.products.county +\" \"+ appState.langResources.common.required); \n        } else if (editData.categoryId ===  undefined ){\n            setAlertMessage(appState.langResources.bllAppDTO.products.category +\" \"+ appState.langResources.common.required); \n        } else if (editData.conditionId ===  undefined ){\n            setAlertMessage(appState.langResources.bllAppDTO.products.condition +\" \"+ appState.langResources.common.required); \n        }else {\n            const url = '/Products';\n            let response = await BaseService.post(url, editData, appState.token!);\n    \n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/products')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n        \n\n    }\n\n\n    useEffect(() => {\n\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.products.product}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.description}</label>\n                                <input value={editData.description || \"\"} onChange={e => setProduct({ ...editData, description: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ProductName\" name=\"Input.ProductName\" placeholder={editData.description} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.color}</label>\n                                <input value={editData.color} onChange={e => setProduct({ ...editData, color: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ProductColor\" name=\"Input.ProductColor\" placeholder={editData.color} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.productAge}</label>\n                                <input value={editData.productAge} onChange={e => setProduct({ ...editData, productAge: e.target.valueAsNumber })} className=\"form-control\" min='0' type=\"number\" id=\"Input_ProductAge\" name=\"Input.ProductAge\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group form-check\">\n                                <input checked={editData.isBooked} onChange={e => setProduct({ ...editData, isBooked: e.target.checked })} type=\"checkbox\" className=\"form-check-input\" id=\"formInput\" />\n                                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">{appState.langResources.bllAppDTO.products.isBooked}</label>\n                            </div>\n                            <div className=\"form-group form-check\">\n                                <input checked={editData.hasTransport} onChange={e => setProduct({ ...editData, hasTransport: e.target.checked })} type=\"checkbox\" className=\"form-check-input\" id=\"formInputCheckBox\" />\n                                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">{appState.langResources.bllAppDTO.products.hasTransport}</label>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.height}</label>\n                                <input value={editData.height} onChange={e => setProduct({ ...editData, height: e.target.valueAsNumber })} className=\"form-control\" min={0} type=\"number\" id=\"Input_ProductHeight\" name=\"Input.Height\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.width}</label>\n                                <input value={editData.width} onChange={e => setProduct({ ...editData, width: e.target.valueAsNumber })} className=\"form-control\" min={0} type=\"number\" id=\"Input_ProductWidth\" name=\"Input.Width\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.depth}</label>\n                                <input value={editData.depth} onChange={e => setProduct({ ...editData, depth: e.target.valueAsNumber })} className=\"form-control\" min={0} type=\"number\" id=\"Input_ProductDepth\" name=\"Input.Depth\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.unit}</label>\n                                <select value={editData.unitName} onChange={e => setProduct({ ...editData, unitId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {unitData.map(unit =>\n                                        <option key={unit.id} value={unit.id}>{unit.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.county}</label>\n                                <select value={editData.countyName} onChange={e => setProduct({ ...editData, countyId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {countyData.map(county =>\n                                        <option key={county.id} value={county.id}>{county.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.city}</label>\n                                <select value={editData.cityName} onChange={e => setProduct({ ...editData, cityId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {cityData.map(city =>\n                                        <option key={city.id} value={city.id}>{city.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.category}</label>\n                                <select value={editData.categoryName} onChange={e => setProduct({ ...editData, categoryId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {categoryData.map(category =>\n                                        <option key={category.id} value={category.id}>{category.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.condition}</label>\n                                <select value={editData.conditionName} onChange={e => setProduct({ ...editData, conditionId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {conditionData.map(condition =>\n                                        <option key={condition.id} value={condition.id}>{condition.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.locationDescription}</label>\n                                <input value={editData.locationDescription} onChange={e => setProduct({ ...editData, locationDescription: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ProductLocationDescription\" name=\"Input.ProductLocationDescription\" placeholder={editData.locationDescription} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/products'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default ProductCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\n\nconst ProductDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [product, setProduct] = useState({} as IProduct || '');\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IProduct>('/Products/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProduct(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <>\n\n\n            <div key={product.id} className=\"mainView\">\n                <div className=\"boxLayout\">\n\n\n                    <tr>\n                        <th id=\"alignCentre\">\n                            {product.pictureUrls?.slice(product.pictureUrls.length - 1).map(picture =>\n\n                                <div >\n                                    <img src={picture} key={picture} className='picture' alt='Pilt' />\n\n                                </div>\n\n\n                            )}\n\n                        </th>\n\n\n                        <div className=\"boxLayout\" id=\"box4\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.description}:</td>\n                                        <td>{product.description}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.county}:</td>\n                                        <td>{product.countyName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.city}:</td>\n                                        <td>{product.cityName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.locationDescription}:</td>\n                                        <td>{product.locationDescription}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"boxLayout\" id=\"box2\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.category}:</td>\n                                        <td>{product.categoryName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.color}:</td>\n                                        <td>{product.color}</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.width}:</td>\n                                        <td>{product.width}{product.unitName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.height}:</td>\n                                        <td>{product.height}{product.unitName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.depth}:</td>\n                                        <td>{product.depth}{product.unitName}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                        <div className=\"boxLayout\" id=\"box3\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.hasTransport}</td>\n                                        <td>\n                                            <input type=\"checkbox\" defaultChecked={product.hasTransport} disabled={true} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.isBooked}</td>\n                                        <td>\n                                            <input type=\"checkbox\" defaultChecked={product.isBooked} disabled={true} />\n                                        </td>\n\n                                    </tr>\n\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.condition}:</td>\n                                        <td>{product.conditionName}</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.productAge}:</td>\n                                        <td>{product.productAge}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.material}:</td>\n                                        {product.material?.map(material =>\n\n                                            <td>{material}</td>\n                                        )}\n\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                        </div>\n\n\n                    </tr>\n\n\n                </div>\n                <p id='backToList'>\n                    <Link to={'/products'}>{appState.langResources.crud.index}</Link>\n                </p>\n            </div>\n\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default ProductDetails;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport {  useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport swal from 'sweetalert';\n\n\nconst ProductIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [products, setProduct] = useState([] as IProduct[] || '');\n    const element = <FontAwesomeIcon icon={faTrash} />\n\n\n    const loadData = useCallback(async () => {\n\n        let data = window.localStorage.getItem('state');\n        window.localStorage.clear();\n\n        if (data != null) {\n            let state = JSON.parse(data);\n            console.log(state)\n            appState.currentLanguage = state.currentLanguage;\n            appState.supportedLanguages = state.supportedLanguages;\n            appState.langResources = state.langResources;\n            console.log(appState)\n            appState.setAuthInfo(state.token, state.firstName, state.lastName);\n        }\n        let result = await BaseService.getAll<IProduct>('/Products?culture=' + appState.currentLanguage.name, appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setProduct(result.data);\n        }\n\n\n    }, [appState])\n\n    const deleteClicked = async (e: Event, id: string) => {\n\n        e.preventDefault();\n\n        console.log(id)\n        let result = await BaseService.delete<IProduct>('/Products/' + id, appState.token!);\n\n        if (result.ok) {\n            window.localStorage.setItem('state', JSON.stringify(appState));\n            window.location.reload();\n        }\n    }\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.products.product}</h1>\n\n            <p>\n                <Link to={'/products/create'}>{appState.langResources.crud.create}</Link>\n            </p>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.description}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.color}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.hasTransport}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.isBooked}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.location}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.size}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.condition}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.material}\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map(product =>\n\n                        <tr key={product.id}>\n                            <td>\n                                {product.description}\n                            </td>\n                            <td>\n                                {product.color}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\" defaultChecked={product.hasTransport} disabled={true} />\n                            </td>\n                            <td>\n\n                                <input type=\"checkbox\" defaultChecked={product.isBooked} disabled={true} />\n                            </td>\n                            <td>\n\n                                {product.countyName}\n\n                                {product.cityName !== null && product.cityName !== \"null\" ?\n                                    <>\n                                        , {product.cityName}\n                                    </>\n                                    :\n                                    <>\n                                    </>\n                                }\n                                {product.locationDescription !== null ?\n                                    <>\n                                        , {product.locationDescription}\n                                    </>\n                                    :\n                                    <>\n                                    </>\n                                }\n\n                            </td>\n                            <td>\n\n                                {product.height !== null ?\n                                    <>\n                                        {appState.langResources.bllAppDTO.products.height}: {product.height}{product.unitName}\n                                    </>\n                                    :\n                                    <>\n                                    </>\n                                }\n                                {product.width !== null ?\n                                    <>\n                                        , {appState.langResources.bllAppDTO.products.width}: {product.width}{product.unitName}\n                                    </>\n                                    :\n                                    <>\n                                    </>\n                                }\n                                {product.depth !== null ?\n                                    <>\n                                        , {appState.langResources.bllAppDTO.products.depth}:  {product.depth}{product.unitName}\n                                    </>\n                                    :\n                                    <>\n                                    </>\n                                }\n\n                            </td>\n                            <td>\n                                {product.conditionName}\n                            </td>\n                            <td>\n\n                                {product.material?.length! > 1 ?\n                                    <>\n\n                                        {product.material!.map(mat =>\n\n                                            <div key={mat}>\n                                                {mat}\n\n                                            </div>\n                                        )}\n                                    </>\n                                    :\n                                    <>\n                                        {product.material}\n                                    </>\n                                }\n\n                            </td>\n\n                            <td>\n                                <Link to={'/products/edit/' + product.id}>{appState.langResources.crud.edit}</Link>\n\n                                <br/>\n                                    <Link to={'/products/' + product.id}>{appState.langResources.crud.details}</Link>\n                              \n                                <span onClick={(e) => swal({ text: appState.langResources.crud.deleteConfirm, dangerMode: true }).then(willDelete => { if (willDelete) { deleteClicked(e.nativeEvent, product.id!) } })}>\n\n                                    <span id=\"deleteButton\" >\n                                        {element}\n                                    </span>\n                                </span>\n\n\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n\n        </>\n\n    );\n}\n\nexport default ProductIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { ICity } from \"../../dto/ICity\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { ICondition } from \"../../dto/ICondition\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\nconst ProductEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setProduct] = useState({} as IProduct || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n    const [unitData, setUnit] = useState([] as IUnit[]);\n    const [cityData, setCity] = useState([] as ICity[]);\n    const [countyData, setCounty] = useState([] as ICounty[]);\n    const [categoryData, setCategory] = useState([] as ICategory[]);\n    const [conditionData, setCondition] = useState([] as ICondition[]);\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n\n        let result = await BaseService.get<IProduct>('/Products/' + id, appState.token!);\n\n        console.log(result)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProduct(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n        let unitResult = await BaseService.getAll<IUnit>('/Units?culture=' + appState.currentLanguage.name, appState.token!);\n        if (unitResult.ok && unitResult.data) {\n            setUnit(unitResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: unitResult.statusCode });\n        }\n\n        let cityResult = await BaseService.getAll<ICity>('/Cities?culture=' + appState.currentLanguage.name, appState.token!);\n        if (cityResult.ok && cityResult.data) {\n            setCity(cityResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: cityResult.statusCode });\n        }\n\n        let countyResult = await BaseService.getAll<ICounty>('/Counties?culture=' + appState.currentLanguage.name, appState.token!);\n        if (countyResult.ok && countyResult.data) {\n            setCounty(countyResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: countyResult.statusCode });\n        }\n\n        let categoryResult = await BaseService.getAll<ICategory>('/Categories?culture=' + appState.currentLanguage.name, appState.token!);\n        if (categoryResult.ok && categoryResult.data) {\n            setCategory(categoryResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: categoryResult.statusCode });\n        }\n\n        let conditionResult = await BaseService.getAll<ICondition>('/Conditions?culture=' + appState.currentLanguage.name, appState.token!);\n        if (conditionResult.ok && conditionResult.data) {\n            setCondition(conditionResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: conditionResult.statusCode });\n        }\n\n    }, [appState, id])\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.description === undefined || editData.description.length < 2) {\n            setAlertMessage(appState.langResources.bllAppDTO.products.description +\" \"+ appState.langResources.common.required);        \n        } else if (editData.countyId ===  undefined ){\n            setAlertMessage(appState.langResources.bllAppDTO.products.county +\" \"+ appState.langResources.common.required); \n        } else if (editData.categoryId ===  undefined ){\n            setAlertMessage(appState.langResources.bllAppDTO.products.category +\" \"+ appState.langResources.common.required); \n        } else if (editData.conditionId ===  undefined ){\n            setAlertMessage(appState.langResources.bllAppDTO.products.condition +\" \"+ appState.langResources.common.required); \n        } else {\n            setAlertMessage('');\n\n            const url = '/Products/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/products')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.products.product}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.description}</label>\n                                <input value={editData.description || ''} onChange={e => setProduct({ ...editData, description: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ProductName\" name=\"Input.ProductName\" placeholder={editData.description} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.color}</label>\n                                <input value={editData.color || ''} onChange={e => setProduct({ ...editData, color: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ProductColor\" name=\"Input.ProductColor\" placeholder={editData.color} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.productAge}</label>\n                                <input value={editData.productAge} onChange={e => setProduct({ ...editData, productAge: e.target.valueAsNumber })} className=\"form-control\" min='0' type=\"number\" id=\"Input_ProductAge\" name=\"Input.ProductAge\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group form-check\">\n                                <input checked={editData.isBooked} onChange={e => setProduct({ ...editData, isBooked: e.target.checked })} type=\"checkbox\" className=\"form-check-input\" id=\"formInputIsBooked\" />\n                                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">{appState.langResources.bllAppDTO.products.isBooked}</label>\n                            </div>\n                            <div className=\"form-group form-check\">\n                                <input checked={editData.hasTransport} onChange={e => setProduct({ ...editData, hasTransport: e.target.checked })} type=\"checkbox\" className=\"form-check-input\" id=\"formInputCheckBox\" />\n                                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">{appState.langResources.bllAppDTO.products.hasTransport}</label>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.height}</label>\n                                <input value={editData.height} onChange={e => setProduct({ ...editData, height: e.target.valueAsNumber })} className=\"form-control\" min={0} type=\"number\" id=\"Input_ProductHeight\" name=\"Input.ProductHeight\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.width}</label>\n                                <input value={editData.width} onChange={e => setProduct({ ...editData, width: e.target.valueAsNumber })} className=\"form-control\" min={0} type=\"number\" id=\"Input_ProductWidth\" name=\"Input.ProductWidth\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.depth}</label>\n                                <input value={editData.depth} onChange={e => setProduct({ ...editData, depth: e.target.valueAsNumber })} className=\"form-control\" min={0} type=\"number\" id=\"Input_ProductDepth\" name=\"Input.ProductDepth\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.unit}</label>\n                                <select value={editData.unitId || ''} onChange={e => setProduct({ ...editData, unitId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {unitData.map(unit =>\n                                        <option key={unit.id} value={unit.id || ''}>{unit.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.county}</label>\n                                <select value={editData.countyId || ''} onChange={e => setProduct({ ...editData, countyId: e.target.value })} className=\"form-control\" id=\"county\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {countyData.map(county =>\n                                        <option key={county.id} value={county.id || ''}>{county.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.city}</label>\n                                <select value={editData.cityId || ''} onChange={e => setProduct({ ...editData, cityId: e.target.value })} className=\"form-control\" id=\"city\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {cityData.map(city =>\n                                        <option key={city.id} value={city.id || ''}>{city.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.category}</label>\n                                <select value={editData.categoryId || ''} onChange={e => setProduct({ ...editData, categoryId: e.target.value })} className=\"form-control\" id=\"category\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {categoryData.map(category =>\n                                        <option key={category.id} value={category.id || ''}>{category.name}</option>\n                                    )};\n\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">{appState.langResources.bllAppDTO.products.condition}</label>\n                                <select value={editData.conditionId || ''} onChange={e => setProduct({ ...editData, conditionId: e.target.value })} className=\"form-control\" id=\"fcondition\">\n                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                    {conditionData.map(condition =>\n                                        <option key={condition.id} value={condition.id || ''}>{condition.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.products.locationDescription}</label>\n                                <input value={editData.locationDescription || ''} onChange={e => setProduct({ ...editData, locationDescription: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_ProductLocationDescription\" name=\"Input.ProductLocationDescription\" placeholder={editData.locationDescription} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/products'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default ProductEdit;","import { BaseService } from \"../../services/base-service\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst UnitCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [editData, setUnit] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Units';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/unit')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.create}</h2 >\n            <h3>{appState.langResources.bllAppDTO.units.unit}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.units.name}</label>\n                                <input value={editData.name} onChange={e => setUnit({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_UnitName\" name=\"InputUnitName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/unit'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default UnitCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\n\nconst UnitDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [unit, setUnit] = useState({} as IUnit || '');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IUnit>('/Units/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUnit(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/unit/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.bllAppDTO.units.unit}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.units.name}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {unit.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/unit'}>{appState.langResources.crud.index}</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n    );\n}\n\nexport default UnitDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react';\n\n\nconst UnitEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setUnit] = useState({} as IUnit || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IUnit>('/Units/' + id, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUnit(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n\n    \n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Units/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/unit')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.bllAppDTO.units.unit}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.bllAppDTO.units.name}</label>\n                                <input value={editData.name || ''} onChange={e => setUnit({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_UnitName\" name=\"Input.UnitName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/unit'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default UnitEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react'\n\n\nconst RowDisplay = (props: { unit: IUnit, role: string, appState: IAppState }) => (\n    <tr>\n        <td>\n            {props.unit.name}\n        </td>\n\n        <td>\n            <Link to={'/unit/edit/' + props.unit.id}>{props.appState.langResources.crud.edit}</Link> |\n\n            <Link to={'/unit/' + props.unit.id}>{props.appState.langResources.crud.details}</Link>\n        </td>\n    </tr>\n);\n\n\nconst UnitIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [units, setUnits] = useState([] as IUnit[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = useCallback(async () => {\n        let result = await BaseService.getAll<IUnit>('/Units?culture=' + appState.currentLanguage.name, appState.token!);\n     \n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUnits(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    \n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.units.unit}</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/unit/create'}>{appState.langResources.crud.create}</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                        {appState.langResources.bllAppDTO.units.name}\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {units.map(unit =>\n                        <RowDisplay unit={unit} key={unit.id} role={role} appState={appState} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default UnitIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IUserBookedProducts } from \"../../dto/IUserBookedProducts\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react'\nimport Loader from \"../../components/Loader\";\n\n\n\nconst UserBookedProductsDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [product, setProduct] = useState({} as IProduct || '');\n\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IUserBookedProducts>('/UserBookedProducts/' + id, appState.token!);\n        var productId = '';\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            productId = result.data.productId;\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n        let productResult = await BaseService.get<IProduct>('/Products/' + productId, appState.token!);\n        if (productResult.ok && productResult.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProduct(productResult.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n\n    }, [appState, id])\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <>\n\n\n            <div key={product.id} className=\"mainView\">\n                <div className=\"boxLayout\">\n\n\n                    <tr>\n                        <th id=\"alignCentre\">\n                            {product.pictureUrls?.slice(product.pictureUrls.length - 1).map(picture =>\n\n                                <div >\n                                    <img src={picture} key={picture} className='picture' alt='Pilt' />\n\n                                </div>\n\n\n                            )}\n\n                        </th>\n\n\n                        <div className=\"boxLayout\" id=\"box4\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.description}:</td>\n                                        <td>{product.description}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.county}:</td>\n                                        <td>{product.countyName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.city}:</td>\n                                        <td>{product.cityName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.locationDescription}:</td>\n                                        <td>{product.locationDescription}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"boxLayout\" id=\"box2\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.category}:</td>\n                                        <td>{product.categoryName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.color}:</td>\n                                        <td>{product.color}</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.width}:</td>\n                                        <td>{product.width}{product.unitName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.height}:</td>\n                                        <td>{product.height}{product.unitName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.depth}:</td>\n                                        <td>{product.depth}{product.unitName}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                        <div className=\"boxLayout\" id=\"box3\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.hasTransport}</td>\n                                        <td>\n                                            <input type=\"checkbox\" defaultChecked={product.hasTransport} disabled={true} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.isBooked}</td>\n                                        <td>\n                                            <input type=\"checkbox\" defaultChecked={product.isBooked} disabled={true} />\n                                        </td>\n\n                                    </tr>\n\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.condition}:</td>\n                                        <td>{product.conditionName}</td>\n                                    </tr>\n\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.productAge}:</td>\n                                        <td>{product.productAge}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.material}:</td>\n                                        {product.material?.map(material =>\n\n                                            <td>{material}</td>\n                                        )}\n\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                        </div>\n\n\n                    </tr>\n\n\n                </div>\n                <p id='backToList'>\n                    <Link to={'/userBooked-Products'}>{appState.langResources.crud.index}</Link>\n                </p>\n            </div>\n\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default UserBookedProductsDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IUserBookedProducts } from \"../../dto/IUserBookedProducts\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport swal from 'sweetalert';\nimport Moment from 'moment';\n\n\nconst UserBookedProductsIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [userBookings, setUserBookedProducts] = useState([] as IUserBookedProducts[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const element = <FontAwesomeIcon icon={faTrash} />\n\n\n    const loadData = useCallback(async () => {\n\n        let data = window.localStorage.getItem('state');\n        window.localStorage.clear();\n\n        if (data != null) {\n            let state = JSON.parse(data);\n            console.log(state)\n            appState.currentLanguage = state.currentLanguage;\n            appState.supportedLanguages = state.supportedLanguages;\n            appState.langResources = state.langResources;\n            console.log(appState)\n            appState.setAuthInfo(state.token, state.firstName, state.lastName);\n        }\n        let result = await BaseService.getAll<IUserBookedProducts>('/UserBookedProducts', appState.token!);\n        console.log(result);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUserBookedProducts(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    const deleteClicked = async (e: Event, id: string) => {\n\n        e.preventDefault();\n\n        console.log(id)\n\n        let result = await BaseService.delete<IUserBookedProducts>('/UserBookedProducts/' + id, appState.token!);\n\n        if (result.ok) {\n            window.localStorage.setItem('state', JSON.stringify(appState));\n            window.location.reload();\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    return (\n        <>\n\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            {appState.langResources.bllAppDTO.products.description}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.bookings.timeBooked}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.bookings.until}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.userBookedProduct.productOwner}\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {userBookings.map(userBookings =>\n                        <tr key={userBookings.id}>\n                            <td>\n                                {userBookings.description}\n                            </td>\n                            <td>\n                                {appState.currentLanguage.name === \"en\" ?\n\n                                    <>\n                                        {Moment(userBookings.timeBooked).format(\"YYYY.MM.DD HH:mm:ss\")}\n                                    </>\n                                    :\n                                    <>\n                                        {Moment(userBookings.timeBooked).format('DD.MM.YYYY HH:mm:ss')}\n                                    </>\n\n\n                                }\n                            </td>\n                            <td>\n                                {appState.currentLanguage.name === \"en\" ?\n\n                                    <>\n                                        {Moment(userBookings.until).format(\"YYYY.MM.DD\")}\n                                    </>\n                                    :\n                                    <>\n                                        {Moment(userBookings.until).format('DD.MM.YYYY')}\n                                    </>\n\n\n                                }\n                            </td>\n                            <td>\n                                {userBookings.email}\n                            </td>\n\n                            <td>\n\n                                <Link to={'/userBooked-Products/' + userBookings.id}>{appState.langResources.crud.details}</Link> |\n                                <span onClick={(e) => swal({ text: appState.langResources.crud.deleteConfirm, dangerMode: true }).then(willDelete => { if (willDelete) { deleteClicked(e.nativeEvent, userBookings.id!) } })}>\n\n                                    <span id=\"deleteButton\" >\n                                        {element}\n                                    </span>\n                                </span>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default UserBookedProductsIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IUserMessages } from \"../../dto/IUserMessages\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport React, { useCallback } from 'react'\nimport Moment from 'moment';\n\n\nconst UserMessagesDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [userMessage, setUserMessages] = useState({} as IUserMessages || '');\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n\n        let result = await BaseService.get<IUserMessages>('/UserMessages/' + id, appState.token!);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUserMessages(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/messageForm/Create/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4> {appState.langResources.bllAppDTO.userMessage.userMessages}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\"> {appState.langResources.bllAppDTO.userMessage.from}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {userMessage.senderEmail || ''}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.userMessage.subject}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {userMessage.subject || ''}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.userMessage.message}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {userMessage.message || ''}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.bllAppDTO.userMessage.dateSent}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appState.currentLanguage.name === \"en\" ?\n\n                        <>\n                            {Moment(userMessage.dateSent).format(\"YYYY.MM.DD HH:mm:ss\")}\n                        </>\n                        :\n                        <>\n                            {Moment(userMessage.dateSent).format('DD.MM.YYYY HH:mm:ss')}\n                        </>\n\n\n                    }\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.reply}</button>\n                        <p id='backToList'>\n                            <Link to={'/userMessages'}>{appState.langResources.crud.index}</Link>\n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n        </div>\n\n    );\n}\n\nexport default UserMessagesDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IUserMessages } from \"../../dto/IUserMessages\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport swal from 'sweetalert';\nimport Moment from 'moment';\n\n\nconst UserMessagesIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [userMessages, setUserMessages] = useState([] as IUserMessages[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const element = <FontAwesomeIcon icon={faTrash} />\n\n    const loadData = useCallback(async () => {\n        let result = await BaseService.getAll<IUserMessages>('/UserMessages', appState.token!);\n        let data = window.localStorage.getItem('state');\n        window.localStorage.clear();\n\n        if (data != null) {\n            let state = JSON.parse(data);\n            console.log(state)\n            appState.currentLanguage = state.currentLanguage;\n            appState.supportedLanguages = state.supportedLanguages;\n            appState.langResources = state.langResources;\n            console.log(appState)\n            appState.setAuthInfo(state.token, state.firstName, state.lastName);\n        }\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUserMessages(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    const deleteClicked = async (e: Event, id: string) => {\n\n        e.preventDefault();\n\n        console.log(id)\n        let result = await BaseService.delete<IUserMessages>('/UserMessages/' + id, appState.token!);\n\n        if (result.ok) {\n            window.localStorage.setItem('state', JSON.stringify(appState));\n            window.location.reload();\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData])\n\n\n    return (\n        <>\n            <h1>{appState.langResources.bllAppDTO.userMessage.userMessages}</h1>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            {appState.langResources.bllAppDTO.userMessage.from}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.userMessage.subject}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.userMessage.message}\n                        </th>\n                        <th>\n                            {appState.langResources.bllAppDTO.userMessage.dateSent}\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {userMessages.map(userMessage =>\n                        <tr>\n                            <td>\n                                {userMessage.senderEmail}\n                            </td>\n                            <td>\n                                {userMessage.subject}\n                            </td>\n                            <td>\n                                {userMessage.message}\n                            </td>\n                            <td>\n                                {appState.currentLanguage.name === \"en\" ?\n\n                                    <>\n                                        {Moment(userMessage.dateSent).format(\"YYYY.MM.DD HH:mm:ss\")}\n                                    </>\n                                    :\n                                    <>\n                                        {Moment(userMessage.dateSent).format('DD.MM.YYYY HH:mm:ss')}\n                                    </>\n\n\n                                }\n                            </td>\n\n                            <td>\n                                <Link to={'/messageForm/create'}>{appState.langResources.crud.reply}</Link> |\n                                 <Link to={'/userMessages/' + userMessage.id}>{appState.langResources.crud.view}</Link> |\n                                 <span onClick={(e) => swal({ text: appState.langResources.crud.deleteConfirm, dangerMode: true }).then(willDelete => { if (willDelete) { deleteClicked(e.nativeEvent, userMessage.id!) } })}>\n\n                                    <span id=\"deleteButton\" >\n                                        {element}\n                                    </span>\n                                </span>\n                            </td>\n                        </tr>)}\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default UserMessagesIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { IAppUser } from \"../../dto/IAppUser\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\nconst AppUserDetails = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [appUser, setAppUser] = useState({} as IAppUser);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IAppUser>('/AppUser/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setAppUser(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/appUser/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <>\n            <h1>{appState.langResources.crud.details}</h1>\n\n            <div>\n                <h4>{appState.langResources.appUser.appUser}</h4>\n                <hr />\n\n                <dl className=\"row\">\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.firstname}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.firstname}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.lastname}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.lastname}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.username}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.username}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.normalizedUserName}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.normalizedUserName}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.email}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.email}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.normalizedEmail}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.normalizedEmail}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.emailConfirmed}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.emailConfirmed}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.passwordHash}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.passwordHash}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.securityStamp}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.securityStamp}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.concurrencyStamp}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.concurrencyStamp}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.phoneNumber}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.phoneNumber}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.phoneNumberConfirmed}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.phoneNumberConfirmed}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.twoFactorEnabled}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.twoFactorEnabled}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.lockoutEnd}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.lockoutEnd}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.lockoutEnabled}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.lockoutEnabled}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.accessFailedCount}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.accessFailedCount}\n                    </dd>\n                </dl>\n            </div>\n            <div className=\"form-group\" >\n                <div id=\"button\">\n                    <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                    <p id='backToList'>\n                        <Link to={'/appUser'}>{appState.langResources.crud.index}</Link>\n                    </p>\n                </div>\n\n            </div>\n               <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default AppUserDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IAppUser } from \"../../dto/IAppUser\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\n\nconst AppUserDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [appUser, setAppUser] = useState({} as IAppUser);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IAppUser>('/AppUser/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setAppUser(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IAppUser>('/AppUser/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/appUser');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <>\n            <h1>{appState.langResources.crud.delete}</h1>\n\n            <div>\n                <h4>{appState.langResources.crud.confirmation}</h4>\n                <hr />\n\n\n                <dl className=\"row\">\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.firstname}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.firstname}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.lastname}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.lastname}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.username}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.username}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.normalizedUserName}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.normalizedUserName}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.email}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.email}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.normalizedEmail}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.normalizedEmail}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.emailConfirmed}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.emailConfirmed}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.passwordHash}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.passwordHash}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.securityStamp}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.securityStamp}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.concurrencyStamp}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.concurrencyStamp}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.phoneNumber}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.phoneNumber}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.phoneNumberConfirmed}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.phoneNumberConfirmed}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.twoFactorEnabled}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.twoFactorEnabled}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.lockoutEnd}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.lockoutEnd}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.lockoutEnabled}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.lockoutEnabled}\n                    </dd>\n                    <dt className=\"col-sm-2\">\n                        {appState.langResources.appUser.accessFailedCount}\n                    </dt>\n                    <dd className=\"col-sm-10\">\n                        {appUser.accessFailedCount}\n                    </dd>\n                </dl>\n            </div>\n            <div className=\"form-group\" >\n                <div id=\"button\">\n                    <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                    <p id='backToList'>\n                        <Link to={'/appUser'}>{appState.langResources.crud.index}</Link>\n                    </p>\n                </div>\n\n            </div>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default AppUserDelete;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IAppUser } from \"../../dto/IAppUser\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\n\nconst RowDisplay = (props: { user: IAppUser }, appState: IAppState) => (\n    <tr>\n        <td>\n            {props.user.firstname}\n        </td>\n        <td>\n            {props.user.lastname}\n        </td>\n        <td>\n            {props.user.email}\n        </td>\n        <td>\n            {props.user.email}\n        </td>\n        <td>\n            {props.user.phoneNumber}\n        </td>\n        <td>\n            {props.user.lockoutEnd}\n        </td>\n        <td>\n            <Link to={'/appUser/' + props.user.id}>Details</Link> |\n            <Link to={'/appUser/edit/' + props.user.id}>Edit</Link> |\n            <Link to={'appUser/delete/' + props.user.id}>Delete</Link>\n        </td>\n    </tr>\n);\n\n\nconst AppUserIndex = () => {\n    const appState = useContext(AppContext);\n    const [users, setUser] = useState([] as IAppUser[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n    const loadData = useCallback(async () => {\n\n        console.log(appState)\n        let result = await BaseService.getAll<IAppUser>('/AppUser', appState.token!);\n        console.log(result);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUser(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            {appState.langResources.appUser.firstname}\n                        </th>\n                        <th>\n                            {appState.langResources.appUser.lastname}\n                        </th>\n                        <th>\n                            {appState.langResources.appUser.username}\n                        </th>\n                        <th>\n                            {appState.langResources.appUser.email}\n                        </th>\n                        <th>\n                            {appState.langResources.appUser.phoneNumber}\n                        </th>\n                        <th>\n                            {appState.langResources.appUser.lockoutEnd}\n                        </th>\n\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map(user =>\n                        <RowDisplay user={user} key={user.id} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default AppUserIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IAppUser } from \"../../dto/IAppUser\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\nconst PictureEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setAppUser] = useState({} as IAppUser);\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IAppUser>('/AppUser/' + id, appState.token!);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setAppUser(result.data);\n\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        setAlertMessage('');\n        console.log(editData)\n\n        const url = '/AppUser/' + id;\n        let response = await BaseService.edit(url, editData, appState.token!);\n\n        console.log(response)\n        if (response.statusCode >= 200 && response.statusCode < 400) {\n            history.push('/appUser')\n        } else {\n            setAlertMessage(response.messages![0]);\n       \n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.appUser.appUser}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.firstname}</label>\n                                <input value={editData.firstname || ''} onChange={e => setAppUser({ ...editData, firstname: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Firstname\" name=\"Input.Firstname\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.lastname}</label>\n                                <input value={editData.lastname || ''} onChange={e => setAppUser({ ...editData, lastname: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Lastname\" name=\"Input.Lastname\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.username}</label>\n                                <input value={editData.username || ''} onChange={e => setAppUser({ ...editData, username: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Username\" name=\"Input.Username\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.normalizedUserName}</label>\n                                <input value={editData.normalizedUserName || ''} onChange={e => setAppUser({ ...editData, normalizedUserName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_NormN\" name=\"Input.NormN\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.email}</label>\n                                <input value={editData.email || ''} onChange={e => setAppUser({ ...editData, email: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Email\" name=\"Input.Email\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.normalizedEmail}</label>\n                                <input value={editData.normalizedEmail || ''} onChange={e => setAppUser({ ...editData, normalizedEmail: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_NormEmail\" name=\"Input.NormEmail\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group form-check\">\n                                <input checked={editData.emailConfirmed} onChange={e => setAppUser({ ...editData, emailConfirmed: e.target.checked })} type=\"checkbox\" className=\"form-check-input\" id=\"EmailConf\" />\n                                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">{appState.langResources.appUser.emailConfirmed}</label>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.passwordHash}</label>\n                                <input value={editData.passwordHash || ''} onChange={e => setAppUser({ ...editData, passwordHash: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_PassHash\" name=\"Input.PassHash\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.securityStamp}</label>\n                                <input value={editData.securityStamp|| ''} onChange={e => setAppUser({ ...editData, securityStamp: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_SecStamp\" name=\"Input.SecStamp\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.concurrencyStamp}</label>\n                                <input value={editData.concurrencyStamp || ''} onChange={e => setAppUser({ ...editData, concurrencyStamp: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Con\" name=\"Input.Con\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.phoneNumber}</label>\n                                <input value={editData.phoneNumber || ''} onChange={e => setAppUser({ ...editData, phoneNumber: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Phone\" name=\"Input.Phone\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group form-check\">\n                                <input checked={editData.phoneNumberConfirmed} onChange={e => setAppUser({ ...editData, phoneNumberConfirmed: e.target.checked })} type=\"checkbox\" className=\"form-check-input\" id=\"phoneConfirmed\" />\n                                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">{appState.langResources.appUser.phoneNumberConfirmed}</label>\n                            </div>\n                            <div className=\"form-group form-check\">\n                                <input checked={editData.twoFactorEnabled} onChange={e => setAppUser({ ...editData, twoFactorEnabled: e.target.checked })} type=\"checkbox\" className=\"form-check-input\" id=\"formInputCheckBoxEnabled\" />\n                                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">{appState.langResources.appUser.twoFactorEnabled}</label>\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.lockoutEnabled}</label>\n                                <input checked={editData.lockoutEnabled} onChange={e => setAppUser({ ...editData, lockoutEnabled: e.target.checked })} className=\"form-control\" type=\"checkbox\" id=\"Input_LEnabled\" name=\"Input.LEnabled\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appUser.accessFailedCount}</label>\n                                <input value={editData.accessFailedCount|| 0} onChange={e => setAppUser({ ...editData, accessFailedCount: e.target.valueAsNumber })} className=\"form-control\" type=\"number\" id=\"Input_Count\" name=\"Input.COunt\" autoComplete=\"current-name\" />\n                            </div>\n                         \n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/appUser'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default PictureEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { IAppRole } from \"../../dto/IAppRole\";\nimport Loader from \"../../components/Loader\";\n\n\nconst AppRoleCreate = () => {\n\n    const appState = useContext(AppContext);\n    const [pageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setAppRole] = useState({} as IAppRole);\n    const [alertMessage, setAlertMessage] = useState('');\n\n    let history = useHistory();\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        setAlertMessage('');\n        console.log(editData)\n\n        const url = '/AppRole';\n        let response = await BaseService.post(url, editData, appState.token!);\n\n        console.log(response)\n        if (response.statusCode >= 200 && response.statusCode < 400) {\n            history.push('/appRole')\n        } else {\n            setAlertMessage('Error')\n        }\n    }\n\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.appRole.appRole}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appRole.name}</label>\n                                <input value={editData.name} onChange={e => setAppRole({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Name\" name=\"Input.Name\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appRole.normalizedName}</label>\n                                <input value={editData.normalizedName} onChange={e => setAppRole({ ...editData, normalizedName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_NormName\" name=\"Input.NormName\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appRole.concurrencyStamp}</label>\n                                <input value={editData.concurrencyStamp} onChange={e => setAppRole({ ...editData, concurrencyStamp: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Stamp\" name=\"Input.Stamp\" autoComplete=\"current-name\" />\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/appRole'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n\n        </>\n    );\n}\n\nexport default AppRoleCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IAppRole } from \"../../dto/IAppRole\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\n\nconst AppRoleDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [appRole, setAppRole] = useState({} as IAppRole);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IAppRole>('/AppRole/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setAppRole(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/appRole/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.appRole.appRole}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.appRole.name}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appRole.name}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.appRole.normalizedName}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appRole.normalizedName}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.appRole.concurrencyStamp}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appRole.concurrencyStamp}\n                </dd>\n                <hr />\n\n                <div id=\"button\">\n                    <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.edit}</button>\n                    <p id='backToList'>\n                        <Link to={'/appRole'}>{appState.langResources.crud.index}</Link>\n                    </p>\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n\n        </div >\n    );\n}\n\nexport default AppRoleDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IAppRole } from \"../../dto/IAppRole\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\nconst AppRoleDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [appRole, setAppRole] = useState({} as IAppRole);\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IAppRole>('/AppRole/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setAppRole(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IAppRole>('/AppRole/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/appRole');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    return (\n        <div>\n            <h3>{appState.langResources.crud.details}</h3>\n            <h4>{appState.langResources.appRole.appRole}</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">{appState.langResources.appRole.name}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appRole.name}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.appRole.normalizedName}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appRole.normalizedName}\n                </dd>\n                <dt className=\"col-sm-2\">{appState.langResources.appRole.concurrencyStamp}</dt>\n\n                <dd className=\"col-sm-10\">\n                    {appRole.concurrencyStamp}\n                </dd>\n                <hr />\n\n                <div id=\"button\">\n                    <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.crud.delete}</button>\n                    <p id='backToList'>\n                        <Link to={'/appRole'}>{appState.langResources.crud.index}</Link>\n                    </p>\n                </div>\n\n            </dl>\n            <Loader {...pageStatus} />\n\n        </div >\n    );\n}\n\nexport default AppRoleDelete;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IAppRole } from \"../../dto/IAppRole\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\n\nconst RowDisplay = (props: { role: IAppRole}) => (\n    <tr>\n        <td>\n            {props.role.name}\n        </td>\n        <td>\n            {props.role.normalizedName}\n        </td>\n        <td>\n            {props.role.concurrencyStamp}\n        </td>\n        <td>\n            <Link to={'/appRole/' + props.role.id}>Details</Link> |\n            <Link to={'/appRole/edit/' + props.role.id}>Edit</Link> |\n            <Link to={'/appRole/delete/' + props.role.id}>Delete</Link>|\n            <Link to={'/appRole/change/'+ props.role.id}>Change</Link>\n        </td>\n    </tr>\n);\n\n\nconst AppRoleIndex = () => {\n    const appState = useContext(AppContext);\n    const [appRole, setAppRole] = useState([] as IAppRole[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n    const loadData = useCallback(async () => {\n\n        console.log(appState)\n        let result = await BaseService.getAll<IAppRole>('/AppRole', appState.token!);\n        console.log(result);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setAppRole(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState])\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n\n            <p>\n                <Link to={'/appRole/create'}>{appState.langResources.crud.create}</Link>\n            </p>\n\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                           {appState.langResources.appRole.name}\n                    </th>\n                        <th>\n                        {appState.langResources.appRole.normalizedName}\n                    </th>\n                    <th>\n                    {appState.langResources.appRole.concurrencyStamp}\n                    </th>\n                   \n                    </tr>\n                </thead>\n                <tbody>\n                    {appRole.map(role =>\n                        <RowDisplay role={role} key={role.id} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default AppRoleIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IAppRole} from \"../../dto/IAppRole\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\nconst AppRoleEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setAppRole] = useState({} as IAppRole);\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = useCallback(async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IAppRole>('/AppRole/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setAppRole(result.data);\n\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }, [appState, id])\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        setAlertMessage('');\n        console.log(editData)\n\n        const url = '/AppRole/' + id;\n        let response = await BaseService.edit(url, editData, appState.token!);\n\n        console.log(response)\n        if (response.statusCode >= 200 && response.statusCode < 400) {\n            history.push('/appRole')\n        } else {\n            setAlertMessage(response.messages![0]);\n       \n        }\n    }\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n\n    return (\n        <>\n            <h2>{appState.langResources.crud.edit}</h2 >\n            <h3>{appState.langResources.appRole.appRole}</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appRole.name}</label>\n                                <input value={editData.name || ''} onChange={e => setAppRole({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Name\" name=\"Input.Name\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appRole.normalizedName}</label>\n                                <input value={editData.normalizedName || ''} onChange={e => setAppRole({ ...editData, normalizedName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_NormName\" name=\"Input.NormName\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>{appState.langResources.appRole.concurrencyStamp}</label>\n                                <input value={editData.concurrencyStamp || ''} onChange={e => setAppRole({ ...editData, concurrencyStamp: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Stamp\" name=\"Input.Stamp\" autoComplete=\"current-name\" />\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n                            </div>\n                            <p>\n                                <Link to={'/appRole'}>{appState.langResources.crud.index}</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n            <Loader {...pageStatus} />\n\n        </>\n    );\n}\n\nexport default AppRoleEdit;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { IAppUser } from \"../../dto/IAppUser\";\nimport { IAppRole } from \"../../dto/IAppRole\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\n\nconst AppRoleChange = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [role, setAppRole] = useState({} as IAppRole);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [memberData, setAppUserMember] = useState([] as IAppUser[]);\n    const [nonMemberData, setAppUserNonMember] = useState([] as IAppUser[]);\n    const [userData, setUser] = useState({ id: '' , name: ''});\n    const [nonRoleData, setOutOfRole] = useState({ id: '' , name: ''});\n    let history = useHistory();\n\n    const loadData = useCallback(async () => {\n\n\n        let appResult = await BaseService.get<IAppRole>('/AppRole/' + id, appState.token!);\n\n        if (appResult.ok && appResult.data) {\n            setAppRole(appResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: appResult.statusCode });\n        }\n\n        let result = await BaseService.getAll<IAppUser>('/AppRole/Members/' + id, appState.token!);\n\n        console.log(result)\n        if (result.ok && result.data) {\n\n            setAppUserMember(result.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n        let nonResult = await BaseService.getAll<IAppUser>('/AppRole/NonMembers/' + id, appState.token!);\n\n\n        if (nonResult.ok && nonResult.data) {\n\n            setAppUserNonMember(nonResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: nonResult.statusCode });\n        }\n\n\n    }, [appState, id])\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        setAlertMessage('');\n\n        console.log(nonRoleData)\n        console.log(userData)\n      \n      \n        if (userData.id !== '') {\n            const url = '/AppRole/AddUsersToRole';\n            let response = await BaseService.edit(url, userData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n            \n            } else {\n                setAlertMessage('Error')\n            }\n\n        }\n        if (nonRoleData.id !== '') {\n            const url = '/AppRole/Remove/UsersFromRole';\n            let response = await BaseService.edit(url, nonRoleData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n          \n            } else {\n                setAlertMessage('Error')\n            }\n\n        }\n        history.push('/appRole')\n\n    }\n\n    useEffect(() => {\n        loadData();\n\n    }, [loadData]);\n\n    return (\n        <>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n\n                <h2 className=\"bg-info p-1 text-white\">{appState.langResources.appRole.addTo} {role.name}</h2>\n                <table className=\"table table-bordered table-sm\">\n                <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n\n                    <>\n                        {nonMemberData.map(user =>\n                            <tr>\n                                <td>{user.email}</td>\n\n                                <td>\n                                    <input type=\"checkbox\" name=\"NonMembersIds\" value={user.id} onChange={e => setUser({ ...userData, id: e.target.value, name: role.name })} />\n                                </td>\n                            </tr>\n                        )}\n\n                    </>\n                </table>\n\n                <h2 className=\"bg-info p-1 text-white\">{appState.langResources.appRole.removeFrom} {role.name}</h2>\n                <table className=\"table table-bordered table-sm\">\n                    <>\n                        {memberData.map(user =>\n                            <tr>\n                                <td>{user.email}</td>\n                                <td>\n                                    <input type=\"checkbox\" name=\"MembersIds\" value={user.id} onChange={e => setOutOfRole({ ...nonRoleData, id: e.target.value, name: role.name })} />\n                                </td>\n                            </tr>\n                        )}\n                    </>\n                </table>\n                <button type=\"submit\" className=\"btn btn-primary\">{appState.langResources.views.shared.buttons.save}</button>\n            </form>\n            <Loader {...pageStatus} />\n        </>\n    );\n}\n\nexport default AppRoleChange;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { ICity } from \"../../dto/ICity\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport React, { useCallback } from 'react';\nimport Loader from \"../../components/Loader\";\n\n\n\nconst HomeIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [cityData, setCity] = useState([] as ICity[]);\n    const [countyData, setCounty] = useState([] as ICounty[]);\n    const [categoryData, setCategory] = useState([] as ICategory[]);\n    const [productData, setProduct] = useState([] as IProduct[]);\n    const [searchData, setSearch] = useState({ city: '', county: '', category: '' });\n\n    const loadData = useCallback(async () => {\n\n        let result = await BaseService.getFour<IProduct>('/Products/four/lastFour?culture=' + appState.currentLanguage.name);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setProduct(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n\n        let cityResult = await BaseService.getAll<ICity>('/Cities?culture=' + appState.currentLanguage.name);\n\n        if (cityResult.ok && cityResult.data) {\n            setCity(cityResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: cityResult.statusCode });\n        }\n\n        let countyResult = await BaseService.getAll<ICounty>('/Counties?culture=' + appState.currentLanguage.name);\n        if (countyResult.ok && countyResult.data) {\n            setCounty(countyResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: countyResult.statusCode });\n        }\n\n        let categoryResult = await BaseService.getAll<ICategory>('/Categories?culture=' + appState.currentLanguage.name);\n        if (categoryResult.ok && categoryResult.data) {\n            setCategory(categoryResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: categoryResult.statusCode });\n        }\n    }, [appState.currentLanguage.name]);\n\n    useEffect(() => {\n\n        loadData();\n    }, [loadData]);\n\n    return (\n        <>\n\n            <div className=\"mainBox\" >\n                <h2>{appState.langResources.views.shared.buttons.search}</h2>\n\n                <div className=\"boxLayout\">\n                    <React.Fragment>\n                        <form asp-action=\"Search\">\n                            <>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <td className=\"searchList\">\n\n                                                <label htmlFor='formSelect' className=\"control-label\">{appState.langResources.bllAppDTO.counties.county}</label>\n                                                <select value={searchData.county || ''} onChange={e => setSearch({ ...searchData, county: e.target.value })} className=\"form-control\" id='countySelectList' >\n                                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                                    {countyData.map(county =>\n                                                        <option key={county.id} value={county.name}>{county.name}</option>\n                                                    )};\n                                         </select>\n                                            </td>\n                                            <td className=\"searchList\">\n\n                                                <label htmlFor='formSelect' className=\"control-label\">{appState.langResources.bllAppDTO.cities.city}</label>\n                                                <select value={searchData.city || ''} onChange={e => setSearch({ ...searchData, city: e.target.value })} className=\"form-control\" id='citySelectList'>\n                                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                                    {cityData.map(city =>\n                                                        <option key={city.id} value={city.name}>{city.name}</option>\n                                                    )};\n                                         </select>\n                                            </td>\n                                            <td className=\"searchList\">\n\n                                                <label htmlFor='formSelect' className=\"control-label\">{appState.langResources.bllAppDTO.categories.category}</label>\n                                                <select value={searchData.category || ''} onChange={e => setSearch({ ...searchData, category: e.target.value })} className=\"form-control\" id='categorySelectList'>\n                                                    <option>---{appState.langResources.dropDown.select}---</option>\n                                                    {categoryData.map(category =>\n                                                        <option key={category.id} value={category.name}>{category.name}</option>\n                                                    )};\n                                         </select>\n                                            </td>\n                                        </tr>\n                                    </thead>\n                                </table>\n\n                                <button className=\"btn btn-primary\" style={{ float: 'right' }} id='but' >\n                                    <Link\n                                        to={{\n                                            pathname: '/search',\n                                            state: {\n                                                data: searchData,\n                                            },\n                                        }}\n                                    >{appState.langResources.views.shared.buttons.search}</Link>\n                                </button>\n                            </>\n                        </form>\n                    </React.Fragment>\n                </div>\n            </div>\n            <h2>{appState.langResources.bllAppDTO.products.recentlyAddedProducts}</h2>\n            <>\n    \n                {productData.map(product =>\n\n                        <div key={product.id} className=\"boxLayout\" id=\"box1\">\n                            \n                            <table>\n                        \n                                <tbody>\n                                    <tr>\n                                        <th id='pictureElement'>\n\n                                            {product.pictureUrls ?\n\n                                                <>\n                                                    {product.pictureUrls?.slice(product.pictureUrls.length - 1).map((picture) =>\n                                                        <img src={picture} key={picture} id='picture' alt='Pilt' />\n\n                                                    )}\n\n                                                </>\n\n                                                :\n                                                <>\n                                                </>\n                                            }\n\n\n                                        </th>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.description}:</td>\n                                        <td >{product.description}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.county}:</td>\n                                        <td>{product.countyName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.category}:</td>\n                                        <td>{product.categoryName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{appState.langResources.bllAppDTO.products.isBooked}:</td>\n\n                                        <td>\n                                            <input type=\"checkbox\" defaultChecked={product.isBooked} disabled={true} />\n                                        </td>\n                                    </tr>\n\n                                </tbody>\n                                   \n                            </table>\n                      \n\n                        </div>\n\n                )}\n\n            </>\n\n\n            <Loader {...pageStatus} />\n\n        </>\n    )\n}\n\nexport default HomeIndex;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { faCamera } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { useCallback } from 'react';\n\n\n\nconst SearchIndex = (props: any) => {\n\n\n    const appState = useContext(AppContext);\n    const [products, setProduct] = useState([] as IProduct[] || '');\n    const list = useState([] as IProduct[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const city = props.location.state.data.city;\n    const county = props.location.state.data.county;\n    const category = props.location.state.data.category;\n    let history = useHistory();\n    const element = <FontAwesomeIcon icon={faCamera} />\n\n\n\n\n    const loadData =  useCallback(async () => {\n\n        let result = await BaseService.getAll<IProduct>('/Search?culture=' + appState.currentLanguage.name, appState.token!);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n\n            console.log(result.data)\n            list.push(result.data)\n\n            if (city !== '' && county !== '' && category !== '') {\n                var productsList = result.data.filter(a => a.cityName === city && a.countyName === county && a.categoryName === category);\n                setProduct(productsList);\n            } else if (county !== '' && category !== '') {\n                productsList = result.data.filter(a => a.countyName === county && a.categoryName === category);\n                setProduct(productsList);\n            } else if (city !== '' && category !== '') {\n                productsList = result.data.filter(a => a.cityName === city && a.categoryName === category);\n                setProduct(productsList);\n            } else if (city !== '' && county !== '') {\n                productsList = result.data.filter(a => a.cityName === city && a.countyName === county);\n                setProduct(productsList);\n            } else if (city !== '') {\n                productsList = result.data.filter(a => a.cityName === city);\n                setProduct(productsList);\n            } else if (county !== '') {\n                productsList = result.data.filter(a => a.countyName === county);\n                setProduct(productsList);\n            } else if (category !== '') {\n                productsList = result.data.filter(a => a.categoryName === category);\n                setProduct(productsList);\n            } else {\n                setProduct(result.data)\n            }\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n\n        }\n\n    }, [appState.currentLanguage.name, appState.token, category, city, county, list])\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/booking/create')\n    }\n    useEffect(() => {\n        loadData();\n\n    }, [loadData]);\n\n    return (\n        <>\n\n            {products.map(product =>\n\n                <div key={product.id} className=\"mainView\">\n                    <div className=\"boxLayout\">\n\n                        <table>\n                            <tbody>\n\n\n                                <tr>\n                                    <th id=\"alignCentre\">\n                                        {product.pictureUrls?.slice(product.pictureUrls.length - 1).map(picture =>\n\n                                            <div >\n                                                <img src={picture} key={picture} className='picture' alt='Pilt' />\n\n                                            </div>\n\n\n                                        )}\n\n                                    </th>\n                                    {product.pictureUrls?.length !== 0 ?\n\n                                        <>\n                                            <p style={{ verticalAlign: 'top', alignItems: 'right' }}>\n\n                                                <Link to={{\n                                                    pathname: '/booking/details',\n                                                    state: {\n                                                        data: product.id,\n                                                    },\n                                                }}>{element}</Link>\n\n                                            </p>\n                                        </>\n                                        :\n                                        <>\n                                        </>\n\n                                    }\n\n                                    <div className=\"boxLayout\" id=\"box4\">\n                                        <table>\n                                            <tbody>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.description}:</td>\n                                                    <td>{product.description}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.county}:</td>\n                                                    <td>{product.countyName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.city}:</td>\n                                                    <td>{product.cityName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.locationDescription}:</td>\n                                                    <td>{product.locationDescription}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                    <div className=\"boxLayout\" id=\"box2\">\n                                        <table>\n                                            <tbody>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.category}:</td>\n                                                    <td>{product.categoryName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.color}:</td>\n                                                    <td>{product.color}</td>\n                                                </tr>\n\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.width}:</td>\n                                                    <td>{product.width}{product.unitName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.height}:</td>\n                                                    <td>{product.height}{product.unitName}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.depth}:</td>\n                                                    <td>{product.depth}{product.unitName}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                    <div className=\"boxLayout\" id=\"box3\">\n                                        <table>\n                                            <tbody>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.hasTransport}</td>\n                                                    <td>\n                                                        <input type=\"checkbox\" defaultChecked={product.hasTransport} disabled={true} />\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.isBooked}</td>\n                                                    <td>\n                                                        <input type=\"checkbox\" defaultChecked={product.isBooked} disabled={true} />\n                                                    </td>\n\n                                                </tr>\n\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.condition}:</td>\n                                                    <td>{product.conditionName}</td>\n                                                </tr>\n\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.productAge}:</td>\n                                                    <td>{product.productAge}</td>\n                                                </tr>\n                                                <tr>\n                                                    <td>{appState.langResources.bllAppDTO.products.material}:</td>\n                                                    {product.material?.map(material =>\n\n                                                        <td>{material}</td>\n                                                    )}\n\n                                                </tr>\n                                            </tbody>\n                                        </table>\n\n                                    </div>\n\n\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    {appState.token !== null && !product.isBooked ?\n                        <>\n\n                            <div className=\"form-group\" id=\"reserveButton\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.bllAppDTO.bookings.reserve}</button>\n                            </div>\n\n                        </>\n                        :\n                        <>\n\n                        </>\n\n                    }\n                </div>\n\n\n            )}\n\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default SearchIndex;","import { ILoginResponse } from './../types/ILoginResponse';\nimport Axios, { AxiosError } from 'axios';\nimport { ApiBaseUrl } from '../configuration';\nimport { IFetchResponse } from '../types/IFetchResponse';\nimport { IMessages } from '../types/IMessages';\n\nexport abstract class IdentityService {\n    protected static axios = Axios.create({\n        baseURL: ApiBaseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    static async Login(apiEndpoint: string, loginData: {email: string, password:string}): Promise<IFetchResponse<ILoginResponse>> {\n        let loginDataJson = JSON.stringify(loginData);\n        try {\n            let response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson);\n            console.log(response)\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async register(apiEndpoint: string, loginData: {email: string, password:string, firstName: string, lastName: string}):  Promise<IFetchResponse<ILoginResponse>>{\n     \n     \n        let loginDataJson = JSON.stringify(loginData);\n        \n        try {\n           \n            const response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson);\n\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n}\n","import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { IdentityService } from \"../../services/identity-service\";\n\nconst Login = () => {\n    const appState = useContext(AppContext);\n\n    const [loginData, setLoginData] = useState({ email: '', password: '' });\n    const [alertMessage, setAlertMessage] = useState('');\n\n    const logInClicked = async (e: Event) => {\n        e.preventDefault();\n       \n\n        setAlertMessage('');\n        let response = await IdentityService.Login('Account/Login', loginData);\n\n        console.log(response)\n        if (!response.ok) {\n          \n            setAlertMessage(appState.langResources.common.loginProblem);\n        } else {\n            setAlertMessage('');\n\n\n            appState.setAuthInfo(response.data!.token, response.data!.firstname, response.data!.lastname);\n        }\n        \n    }\n\n    return (\n        <>\n            { appState.token !== null ? <Redirect to=\"/\" /> : null}\n            <h1>{appState.langResources.account.logIn}</h1>\n            <form onSubmit={(e) => logInClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Email\">{appState.langResources.account.email}</label>\n                                <input value={loginData.email} onChange={e => setLoginData({ ...loginData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\"  autoComplete=\"username\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Password\">{appState.langResources.account.password}</label>\n                                <input value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\"  autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => logInClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.account.logIn}</button>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default Login;\n","import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { IdentityService } from \"../../services/identity-service\";\n\nconst Register = () => {\n    const appState = useContext(AppContext);\n\n    const [registerData, setRegisterData] = useState({ email: '', password: '', firstName: '', lastName: '' });\n    const [alertMessage, setAlertMessage] = useState('');\n    const [confirm, setConfirm] = useState({confirmPassword: ''});\n\n    const registerClicked = async (e: Event) => {\n        e.preventDefault();\n\n\n        if (registerData.firstName === '' || registerData.lastName === '') {\n            setAlertMessage(appState.langResources.common.minLength);\n        } else if (registerData.password !== confirm.confirmPassword || registerData.password.length === 0){\n            setAlertMessage(appState.langResources.account.passwordDontMatch);\n        }else {\n            let response = await IdentityService.register('account/register', registerData);\n            if (!response.ok) {\n                setAlertMessage(appState.langResources.common.alreadyRegistered);\n            } else {\n                setAlertMessage('');\n\n\n                appState.setAuthInfo(response.data!.token, response.data!.firstname, response.data!.lastname);\n            }\n        }\n    }\n\n    return (\n        <>\n            { appState.token !== null ? <Redirect to=\"/\" /> : null}\n            <h1>{appState.langResources.account.register}</h1>\n            <form onSubmit={(e) => registerClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_FirstName\">{appState.langResources.account.firstName}</label>\n                                <input value={registerData.firstName} onChange={e => setRegisterData({ ...registerData, firstName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_FirstName\" name=\"Input.FirstName\"  autoComplete=\"current-firstName\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_LastName\">{appState.langResources.account.lastName}</label>\n                                <input value={registerData.lastName} onChange={e => setRegisterData({ ...registerData, lastName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_LastName\" name=\"Input.LastName\"  autoComplete=\"current-lastName\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Email\">{appState.langResources.account.email}</label>\n                                <input value={registerData.email} onChange={e => setRegisterData({ ...registerData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\"  autoComplete=\"username\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Password\">{appState.langResources.account.password}</label>\n                                <input value={registerData.password} onChange={e => setRegisterData({ ...registerData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\"  autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_ConfirmPassword\">{appState.langResources.account.confirmPassword}</label>\n                                <input value={confirm.confirmPassword} onChange={e => setConfirm({ ...registerData, confirmPassword: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_ConfirmPassword\" name=\"Input.ConfirmPassword\"  autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => registerClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">{appState.langResources.account.register}</button>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default Register;\n","const Page404 = () => {\n    return (\n        <div>Page not found - 404!</div>\n    );\n}\n\nexport default Page404;\n","import { useState } from \"react\";\n\ninterface IFormValues {\n    input: string;\n    checkbox: boolean;\n    radio: string;\n    textarea: string;\n    select: string;\n}\n\nexport interface IFormProps {\n    values: IFormValues;\n\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\n}\n\nconst FormView = (props: IFormProps) => {\n    return (\n        <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"formInputText\">Text</label>\n                <input value={props.values.input} onChange={(e) => props.handleChange(e.target)} type=\"text\" className=\"form-control\" id=\"formInputText\" />\n            </div>\n            <div className=\"form-group form-check\">\n                <input checked={props.values.checkbox} onChange={(e) => props.handleChange(e.target)} type=\"checkbox\" className=\"form-check-input\" id=\"formInputCheckBox\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">CheckBox</label>\n            </div>\n\n            <div className=\"form-check\">\n                <input checked={props.values.radio === 'checked1'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\" id=\"formInputRadio1\" value=\"checked1\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio1\">\n                    Radio 1\n                </label>\n            </div>\n            <div className=\"form-check\">\n                <input checked={props.values.radio === 'checked2'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\"id=\"formInputRadio2\" value=\"checked2\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio2\">\n                    Radio 2\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"formTextArea\">Textarea</label>\n                <textarea value={props.values.textarea} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formTextArea\" rows={3}></textarea>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"formSelect\">Example select</label>\n                <select value={props.values.select} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formSelect\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n    );\n}\nconst initialFormValues: IFormValues = {\n    input: '',\n    checkbox: false,\n    radio: '',\n    textarea: '',\n    select: '',\n};\n\n\n\nconst PageForm = () => {\n    const [formValues, setFormValues] = useState(initialFormValues);\n\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\n        // todo: update form value\n        console.log(target);\n\n        if (target.id === 'formInputText') {\n            setFormValues({ ...formValues, input: target.value });\n            return;\n        }\n        if (target.id === 'formInputCheckBox') {\n            setFormValues({ ...formValues, checkbox: (target as HTMLInputElement).checked });\n            return;\n        }\n        if (target.id === 'formInputRadio1') {\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\n            return;\n        }\n        if (target.id === 'formInputRadio2') {\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\n            return;\n        }\n        if (target.id === 'formTextArea') {\n            setFormValues({ ...formValues, textarea: target.value });\n            return;\n        }\n        if (target.id === 'formSelect') {\n            setFormValues({ ...formValues, select: target.value });\n            return;\n        }\n    }\n\n\n    return <FormView values={formValues} handleChange={handleChange} />\n};\n\nexport default PageForm;\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport PictureCreate from './containers/pictures/Create';\nimport PictureDetails from './containers/pictures/Details';\nimport PictureEdit from './containers/pictures/Edit';\nimport PictureIndex from './containers/pictures/Index';\n\nimport BookingCreate from './containers/booking/Create';\nimport BookingDetails from './containers/booking/Details';\nimport BookingIndex from './containers/booking/Index';\n\nimport CategoryCreate from './containers/category/Create';\nimport CategoryDetails from './containers/category/Details';\nimport CategoryEdit from './containers/category/Edit';\nimport CategoryIndex from './containers/category/Index';\n\nimport ConditionCreate from './containers/condition/Create';\nimport ConditionDetails from './containers/condition/Details';\nimport ConditionEdit from './containers/condition/Edit';\nimport ConditionIndex from './containers/condition/Index';\n\nimport CountyCreate from './containers/county/Create';\nimport CountyDetails from './containers/county/Details';\nimport CountyEdit from './containers/county/Edit';\nimport CountyIndex from './containers/county/Index';\n\nimport CityCreate from './containers/city/Create';\nimport CityDetails from './containers/city/Details';\nimport CityEdit from './containers/city/Edit';\nimport CityIndex from './containers/city/Index';\n\nimport MaterialCreate from './containers/material/Create';\nimport MaterialDetails from './containers/material/Details';\nimport MaterialEdit from './containers/material/Edit';\nimport MaterialIndex from './containers/material/Index';\n\nimport MessageFormCreate from './containers/messageForm/Create';\nimport MessageFormDetails from './containers/messageForm/Details';\nimport MessageFormIndex from './containers/messageForm/Index';\n\nimport ProductMaterialCreate from './containers/productMaterial/Create';\nimport ProductMaterialDetails from './containers/productMaterial/Details';\nimport ProductMaterialIndex from './containers/productMaterial/Index';\nimport ProductMaterialEdit from './containers/productMaterial/Edit';\n\n\nimport ProductCreate from './containers/products/Create';\nimport ProductDetails from './containers/products/Details';\nimport ProductIndex from './containers/products/Index';\nimport ProductEdit from './containers/products/Edit';\n\nimport UnitCreate from './containers/unit/Create';\nimport UnitDetails from './containers/unit/Details';\nimport UnitEdit from './containers/unit/Edit';\nimport UnitIndex from './containers/unit/Index';\n\nimport UserBookedProductsDetails from './containers/userBooked-Products/Details';\nimport UserBookedProductsIndex from './containers/userBooked-Products/Index';\n\nimport UserMessagesDetails from './containers/userMessages/Details';\nimport UserMessagesIndex from './containers/userMessages/Index';\n\nimport AppUserDetails from './containers/appUser/Details';\nimport AppUserDelete from './containers/appUser/Delete';\nimport AppUserIndex from './containers/appUser/Index';\nimport AppUserEdit from './containers/appUser/Edit';\n\nimport AppRoleCreate from './containers/appRole/Create';\nimport AppRoleDetails from './containers/appRole/Details';\nimport AppRoleDelete from './containers/appRole/Delete';\nimport AppRoleIndex from './containers/appRole/Index';\nimport AppRoleEdit from './containers/appRole/Edit';\nimport AppRoleChange from './containers/appRole/Change';\n\nimport HomeIndex from './containers/home/HomeIndex';\nimport SearchIndex from './containers/search/Index';\n\nimport Login from './containers/identity/Login';\nimport Register from './containers/identity/Register';\nimport Page404 from './containers/Page404';\nimport PageForm from './containers/PageForm';\nimport { AppContextProvider, initialAppState } from './context/AppContext';\n\nfunction App() {\n\n\n    const setAuthInfo = (token: string | null, firstName: string, lastName: string): void => {\n        setAppState({ ...appState, token, firstName, lastName });\n    }\n    const [appState, setAppState] = useState({ ...initialAppState, setAuthInfo });\n\n\n    return (\n        <>\n            <AppContextProvider value={appState} >\n                <Header />\n                <div className=\"container\">\n                    <main role=\"main\" className=\"pb-3\">\n                        <Switch>\n                            <Route exact path=\"/\" component={HomeIndex} />\n\n                            <Route path=\"/search\" component={SearchIndex} />\n\n                            <Route path=\"/form\" component={PageForm} />\n\n                            <Route path=\"/identity/login\" component={Login} />\n                            <Route path=\"/identity/register\" component={Register} />\n\n\n                            <Route path=\"/pictures/create\" component={PictureCreate} />\n                            <Route path=\"/pictures/edit/:id\" component={PictureEdit} />\n                            <Route path=\"/pictures/:id\" component={PictureDetails} />\n                            <Route path=\"/pictures\" component={PictureIndex} />\n\n                            <Route path=\"/city/create\" component={CityCreate} />\n                            <Route path=\"/city/edit/:id\" component={CityEdit} />\n                            <Route path=\"/city/:id\" component={CityDetails} />\n                            <Route path=\"/city\" component={CityIndex} />\n\n                            <Route path=\"/booking/create\" component={BookingCreate} />\n                            <Route path=\"/booking/:id\" component={BookingDetails} />\n                            <Route path=\"/booking\" component={BookingIndex} />\n\n                            <Route path=\"/category/create\" component={CategoryCreate} />\n                            <Route path=\"/category/edit/:id\" component={CategoryEdit} />\n                            <Route path=\"/category/:id\" component={CategoryDetails} />\n                            <Route path=\"/category\" component={CategoryIndex} />\n\n                            <Route path=\"/condition/create\" component={ConditionCreate} />\n                            <Route path=\"/condition/edit/:id\" component={ConditionEdit} />\n                            <Route path=\"/condition/:id\" component={ConditionDetails} />\n                            <Route path=\"/condition\" component={ConditionIndex} />\n\n                            <Route path=\"/county/create\" component={CountyCreate} />\n                            <Route path=\"/county/edit/:id\" component={CountyEdit} />\n                            <Route path=\"/county/:id\" component={CountyDetails} />\n                            <Route path=\"/county\" component={CountyIndex} />\n\n                            <Route path=\"/material/create\" component={MaterialCreate} />\n                            <Route path=\"/material/edit/:id\" component={MaterialEdit} />\n                            <Route path=\"/material/:id\" component={MaterialDetails} />\n                            <Route path=\"/material\" component={MaterialIndex} />\n\n                            <Route path=\"/messageForm/create\" component={MessageFormCreate} />\n                            <Route path=\"/messageForm/:id\" component={MessageFormDetails} />\n                            <Route path=\"/messageForm\" component={MessageFormIndex} />\n\n                            <Route path=\"/productMaterial/create\" component={ProductMaterialCreate} />\n                            <Route path=\"/productMaterial/edit/:id\" component={ProductMaterialEdit} />\n                            <Route path=\"/productMaterial/:id\" component={ProductMaterialDetails} />\n                            <Route path=\"/productMaterial\" component={ProductMaterialIndex} />\n\n                            <Route path=\"/products/create\" component={ProductCreate} />\n                            <Route path=\"/products/edit/:id\" component={ProductEdit} />\n                            <Route path=\"/products/:id\" component={ProductDetails} />\n                            <Route path=\"/products\" component={ProductIndex} />\n\n                            <Route path=\"/unit/create\" component={UnitCreate} />\n                            <Route path=\"/unit/edit/:id\" component={UnitEdit} />\n                            <Route path=\"/unit/:id\" component={UnitDetails} />\n                            <Route path=\"/unit\" component={UnitIndex} />\n\n                            <Route path=\"/userBooked-Products/:id\" component={UserBookedProductsDetails} />\n                            <Route path=\"/userBooked-Products\" component={UserBookedProductsIndex} />\n\n                            <Route path=\"/userMessages/:id\" component={UserMessagesDetails} />\n                            <Route path=\"/userMessages\" component={UserMessagesIndex} />\n\n                            <Route path=\"/appUser/edit/:id\" component={AppUserEdit} />\n                            <Route path=\"/appUser/delete/:id\" component={AppUserDelete} />\n                            <Route path=\"/appUser/:id\" component={AppUserDetails} />\n                            <Route path=\"/appUser\" component={AppUserIndex} />\n\n                            <Route path=\"/appRole/create\" component={AppRoleCreate} />\n                            <Route path=\"/appRole/edit/:id\" component={AppRoleEdit} />\n                            <Route path=\"/appRole/delete/:id\" component={AppRoleDelete} />\n                            <Route path=\"/appRole/change/:id\" component={AppRoleChange} />\n                            <Route path=\"/appRole/:id\" component={AppRoleDetails} />\n                            <Route path=\"/appRole\" component={AppRoleIndex} />\n\n                            <Route component={Page404} />\n                        </Switch>\n                    </main>\n                </div>\n                <Footer />\n            </AppContextProvider>\n        </>\n    );\n}\n\nexport default App;\n\n\n","import 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport './assets/site.css'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}