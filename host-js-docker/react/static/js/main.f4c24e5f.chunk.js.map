{"version":3,"sources":["types/EPageStatus.ts","components/Alert.tsx","components/Footer.tsx","context/AppContext.ts","components/Header.tsx","configuration.ts","services/base-service.ts","containers/pictures/Create.tsx","containers/pictures/Delete.tsx","containers/pictures/Details.tsx","containers/pictures/Edit.tsx","components/Loader.tsx","containers/pictures/Index.tsx","containers/booking/Create.tsx","containers/booking/Details.tsx","containers/booking/Index.tsx","containers/category/Create.tsx","containers/category/Details.tsx","containers/category/Edit.tsx","containers/category/Index.tsx","containers/condition/Create.tsx","containers/condition/Details.tsx","containers/condition/Edit.tsx","containers/condition/Index.tsx","containers/county/Create.tsx","containers/county/Details.tsx","containers/county/Edit.tsx","containers/county/Index.tsx","containers/city/Create.tsx","containers/city/Details.tsx","containers/city/Edit.tsx","containers/city/Index.tsx","containers/material/Create.tsx","containers/material/Details.tsx","containers/material/Edit.tsx","containers/material/Index.tsx","containers/messageForm/Create.tsx","containers/messageForm/Details.tsx","containers/messageForm/Delete.tsx","containers/messageForm/Index.tsx","containers/productMaterial/Create.tsx","containers/productMaterial/Details.tsx","containers/productMaterial/Delete.tsx","containers/productMaterial/Index.tsx","containers/productMaterial/Edit.tsx","containers/products/Create.tsx","containers/products/Details.tsx","containers/products/Delete.tsx","containers/products/Index.tsx","containers/products/Edit.tsx","containers/unit/Create.tsx","containers/unit/Details.tsx","containers/unit/Edit.tsx","containers/unit/Index.tsx","containers/userBooked-Products/Delete.tsx","containers/userBooked-Products/Details.tsx","containers/userBooked-Products/Index.tsx","containers/userMessages/Delete.tsx","containers/userMessages/Details.tsx","containers/userMessages/Index.tsx","containers/home/HomeIndex.tsx","services/identity-service.ts","containers/identity/Login.tsx","containers/identity/Register.tsx","containers/Page404.tsx","containers/PageForm.tsx","App.tsx","index.tsx"],"names":["EPageStatus","EAlertClass","Footer","className","initialAppState","token","firstName","lastName","setAuthInfo","AppContext","React","createContext","AppContextProvider","Provider","Header","Consumer","appState","useContext","role","JSON","parse","atob","split","id","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","aria-haspopup","aria-labelledby","onClick","rel","ApiBaseUrl","BaseService","headers","Authorization","apiEndpoint","this","axios","get","getAxiosConfiguration","response","ok","status","statusCode","data","error","messages","editData","console","log","put","postData","post","delete","Axios","create","baseURL","Alert","props","show","alertClass","message","PictureCreate","useParams","useState","pageStatus","Loading","setPageStatus","setPicture","alertMessage","setAlertMessage","productData","setProduct","history","useHistory","loadData","a","getAll","productResult","Error","submitClicked","e","preventDefault","url","length","productName","push","useEffect","onSubmit","nativeEvent","Danger","value","onChange","target","name","autoComplete","htmlFor","productId","map","product","description","PictureDelete","picture","result","OK","deleteClicked","PictureDetails","editClicked","PictureEdit","edit","Loader","RowDisplay","PictureIndex","pictures","setPictures","CityCreate","setCity","placeholder","CityDetails","city","CityIndex","cities","setCities","info","CategoryCreate","setCategory","CategoryDetails","category","CategoryEdit","CategoryIndex","categories","setCategories","CityEdit","CountyCreate","setCounty","minLength","CountyDetails","county","CountyEdit","nameId","CountyIndex","counties","setCounties","UnitCreate","setUnit","UnitDetails","unit","UnitEdit","UnitIndex","units","setUnits","HomeIndex","IdentityService","loginData","loginDataJson","stringify","Login","email","password","setLoginData","logInClicked","firstname","lastname","Register","registerData","setRegisterData","confirmPassword","confirm","setConfirm","regexEmail","registerClicked","test","register","Page404","FormView","values","input","handleChange","checked","checkbox","radio","textarea","rows","select","initialFormValues","PageForm","formValues","setFormValues","App","setAppState","exact","path","component","BookingCreate","BookingDetails","BookingIndex","ConditionCreate","ConditionEdit","ConditionDetails","ConditionIndex","MaterialCreate","MaterialEdit","MaterialDetails","MaterialIndex","MessageFormCreate","MessageFormDelete","MessageFormDetails","MessageFormIndex","ProductMaterialCreate","ProductMaterialEdit","ProductMaterialDelete","ProductMaterialDetails","ProductMaterialIndex","ProductCreate","ProductEdit","ProductDelete","ProductDetails","ProductIndex","UserBookedProductsDelete","UserBookedProductsDetails","UserBookedProductsIndex","UserMessagesDelete","UserMessagesDetails","UserMessagesIndex","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4c24e5f.chunk.js","sourcesContent":["export enum EPageStatus {\n    Loading = \"Loading...\",\n    Error = \"Error...\",\n    OK = \"Ok\",\n}\n","export enum EAlertClass {\n    Primary = 'alert-primary',\n    Secondary = 'alert-secondary',\n    Success = 'alert-success',\n    Danger = 'alert-danger',\n    Warning = 'alert-warning',\n    Info = 'alert-info',\n    Light = 'alert-light',\n    Dark = 'alert-dark',\n}\n\nconst Alert = (props: {show: boolean, message: string, alertClass: EAlertClass }) => {\n    \n    return props.show ? <div className={'alert ' + props.alertClass} role=\"alert\">{props.message}</div> : null;\n}\n\nexport default Alert;\n","const Footer = () => {\n    return (\n        <footer className=\"border-top footer text-muted\">\n            <div className=\"container\">\n                &copy; 2021 - React\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nexport interface IAppState {\n    token: string | null;\n    firstName: string;\n    lastName: string;\n    setAuthInfo: (token: string | null, firstName: string, lastName: string) => void;\n}\n\nexport const initialAppState : IAppState = {\n    token: null,\n    firstName: '',\n    lastName: '',\n\n\n    setAuthInfo: (token: string | null, firstName: string, lastName: string): void => {}\n}\n\nexport const AppContext = React.createContext<IAppState>(initialAppState);\nexport const AppContextProvider = AppContext.Provider;\nexport const AppContextConsumer = AppContext.Consumer;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { AppContext } from \"../context/AppContext\";\n\nconst Header = () => {\n    const appState = useContext(AppContext);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n\n        <header>\n            <nav className=\"navbar navbar-expand-sm  navbar-toggleable-sm navbar-dark  bg-dark border-bottom box-shadow mb-3\">\n                <div className=\"container\">\n                    <NavLink className=\"fa fa-home text-gray\" id=\"homeButton\" to=\"/\">Home</NavLink>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"navbar-collapse collapse d-sm-inline-flex justify-content-between\">\n                        <ul className=\"navbar-nav flex-grow-1\">\n\n                            {appState.token === null ?\n                                <>\n                                    <li className=\"nav-item\">\n                                        <NavLink className=\"nav-link text-gray\" to=\"/booking\">Find a product</NavLink>\n                                    </li>\n                                </>\n                                :\n                                <>\n                                    <li className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            UserMessages\n                                    </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/messageForm\">Message Form</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/userMessages\">User Messages</NavLink>\n                                            </li>\n                                        </div>\n                                    </li>\n                                    <li className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            My Product\n                            </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/product\">Products</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/userBooked-Products\">User Bookings</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/productMaterial\">Product Materials</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/pictures\">Pictures</NavLink>\n                                            </li>\n                                        </div>\n                                    </li>\n\n\n                                    <li className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            Search\n                            </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/category\">Category</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/material\">Materials</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/city\">City</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/county\">County</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/condition\">Condition</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/unit\">Unit</NavLink>\n                                            </li>\n\n                                        </div>\n                                    </li>\n                                </>\n\n                            }\n                            {role === \"Admin\" ?\n                                <>\n                                    <li className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle text-gray\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            Users\n                            </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/condition\">AppUser</NavLink>\n                                            </li>\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link text-dark\" to=\"/unit\">AppRole</NavLink>\n                                            </li>\n\n                                        </div>\n                                    </li>\n                                </>\n                                :\n                                <>\n\n                                </>\n                            }\n\n                        </ul>\n                        <ul className=\"navbar-nav\">\n\n                            {appState.token != null ?\n                                <>\n                                 <li className=\"nav-item\">\n                                        <NavLink id=\"userLayout\" className='fas fa-user-alt' to=\"/account/manager\">{appState.firstName + ' ' + appState.lastName}</NavLink>\n                                      \n                                    </li>\n                            \n                                    <li className=\"nav-item\">\n                                        <a onClick={() => appState.setAuthInfo(null, '', '')} className=\"nav-link text-gray\" >Logout</a>\n                                    </li>\n\n                                </>\n                                :\n                                <>\n                                    <li className=\"nav-item\">\n                                        <NavLink className=\"nav-link text-gray\" to=\"/identity/login\">Login</NavLink>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <NavLink className=\"nav-link text-gray\" to=\"/identity/register\">Register</NavLink>\n                                    </li>\n\n                                </>\n\n                            }\n                            <li className=\"nav-item dropdown\">\n                                        <a className=\"nav-link dropdown-toggle material-icons\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            <i className=\"material-icons\">&#xe894;</i>\n                                            <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n                                            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n                                        </a>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                            <a className=\"nav-link text-dark\">English</a>\n                                            <a className=\"nav-link text-dark\">Estonia</a>\n\n                                        </div>\n                                    </li>\n\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n\n        </header >\n\n    );\n}\n\nexport default Header;\n","export const ApiBaseUrl = \"https://localhost:5001/api/v1\";","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport { data } from 'jquery';\nimport { ApiBaseUrl } from '../configuration';\nimport { IFetchResponse } from '../types/IFetchResponse';\nimport { IMessages } from '../types/IMessages';\n\nexport abstract class BaseService {\n    protected static axios = Axios.create({\n        baseURL: ApiBaseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    protected static getAxiosConfiguration(token?: string): AxiosRequestConfig | undefined {\n        if (!token) return undefined;\n        const config: AxiosRequestConfig = {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        };  \n        return config;      \n    }\n\n    static async getAll<TEntity>(apiEndpoint: string, token?: string): Promise<IFetchResponse<TEntity[]>> {\n        try {\n            let response = await this.axios.get<TEntity[]>(apiEndpoint, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async get<TEntity>(apiEndpoint: string, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let response = await this.axios.get<TEntity>(apiEndpoint, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async edit<TEntity>(apiEndpoint: string, editData: TEntity, token?: string): Promise<IFetchResponse<TEntity>> {\n\n        console.log(apiEndpoint)\n        console.log(editData)\n        try {\n            let response = await this.axios.put<TEntity>(apiEndpoint, editData, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async post<TEntity>(apiEndpoint: string, postData: TEntity, token?: string): Promise<IFetchResponse<TEntity>> {\n\n        try {\n            let response = await this.axios.post<TEntity>(apiEndpoint, postData, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async delete<TEntity>(apiEndpoint: string, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let response = await this.axios.delete<TEntity>(apiEndpoint, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n\n}\n","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { IProduct } from \"../../dto/IProduct\";\n\n\nconst PictureCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setPicture] = useState({} as IPicture);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [productData, setProduct] = useState([] as IProduct[]);\n\n    let history = useHistory();\n   \n   \n\n    const loadData = async () => {\n        console.log(id)\n\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n\n    }\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n        if(typeof(editData.url) === 'undefined'){\n            setAlertMessage('url can not be empty!')\n        }\n\n        else if (editData.url.length < 2) {\n            setAlertMessage('The field Url must be a string or array type with a minimum length of 2.');\n        }\n        else if (typeof(editData.productName) === 'undefined') {\n            setAlertMessage('Product name can not be empty!');\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Pictures';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/pictures')\n            } else {\n                setAlertMessage('Error')\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n\n    }, []);\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>Picture</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Url</label>\n                                <input value={editData.url} onChange={e => setPicture({ ...editData, url: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">Product name</label>\n                                <select value={editData.productName} onChange={e => setPicture({ ...editData, productId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---Please select---</option>\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.id}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/pictures'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default PictureCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/pictures');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h2>Are you sure you want to delete this?</h2>\n            <h3>Picture</h3>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button>\n                        <p id=\"backToList\">\n                            <Link to={'/pictures'}>Back to List</Link>\n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default PictureDelete;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/pictures/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>Picture</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div id=\"button\">\n                    <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                    <p id='backToList'>\n                        <Link to={'/pictures'}>Back to List</Link>\n                    </p>\n                </div>\n\n            </dl>\n        </div >\n    );\n}\n\nexport default PictureDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nconst PictureEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setPicture] = useState({} as IPicture);\n    const [productData, setProduct] = useState([] as IProduct[]);\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n\n\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.url.length < 2) {\n            setAlertMessage('The field Url must be a string or array type with a minimum length of 2.');\n        }\n        if (editData.productName?.length! < 1) {\n            setAlertMessage('Product name is empty!');\n        }\n        setAlertMessage('');\n        console.log(editData)\n\n        const url = '/Pictures/' + id;\n        let response = await BaseService.edit(url, editData, appState.token!);\n\n        console.log(response)\n        if (response.statusCode >= 200 && response.statusCode < 400) {\n            history.push('/pictures')\n        } else {\n            setAlertMessage(response.messages![0]);\n       \n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>Picture</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Url</label>\n                                <input value={editData.url || ''} onChange={e => setPicture({ ...editData, url: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Url\" name=\"Input.Url\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">Product name</label>\n                                <select value={editData.productName || ''} onChange={e => setPicture({ ...editData, productName: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.description || ''}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                            </div>\n                            <p>\n                                <Link to={'/pictures'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default PictureEdit;","import { EPageStatus } from \"../types/EPageStatus\";\n\nconst Loader = (props: {pageStatus:EPageStatus, statusCode:  number}) => {\n    if (props.pageStatus === EPageStatus.Loading){\n        return <div className=\"alert alert-primary\" role=\"alert\">Loading...</div>;\n    }\n    if (props.pageStatus === EPageStatus.Error) {\n        return <div className=\"alert alert-danger\" role=\"alert\">Error... {props.statusCode}</div>\n    }\n    return <></>;\n}\n\nexport default Loader;\n","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { data } from \"jquery\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\nconst RowDisplay = (props: { picture: IPicture }) => (\n    <tr>\n        <td>\n            {props.picture.url}\n        </td>\n        <td>\n            {props.picture.productName}\n        </td>\n        <td>\n            <Link to={'/pictures/' + props.picture.id}>Details</Link> |\n            <Link to={'/pictures/edit/' + props.picture.id}>Edit</Link> |\n            <Link to={'/pictures/delete/' + props.picture.id}>Delete</Link>\n        </td>\n    </tr>\n);\n\n\nconst PictureIndex = () => {\n    const appState = useContext(AppContext);\n    const [pictures, setPictures] = useState([] as IPicture[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData  = async () => {\n       \n        console.log(appState)\n        let result = await BaseService.getAll<IPicture>('/Pictures', appState.token!);\n        console.log(result);\n        \n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPictures(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n        <h1>Pictures</h1>\n        {appState.token != null ?\n                <>\n                    <p>\n                        <Link to={'/pictures/create'}>Create</Link> \n                    </p>\n\n                </>\n                :\n                <>\n                </>\n            }\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>\n                      Url\n                    </th>\n                    <th>\n                      Product Name\n                    </th>\n                    \n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {pictures.map(picture =>\n                    <RowDisplay picture={picture} key={picture.id} />)\n                }\n            </tbody>\n        </table>\n        <Loader {...pageStatus} />\n    </>\n\n    );\n}\n\nexport default PictureIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>City</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [city, setCity] = useState({} as ICity || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/city/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>City</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {city.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/city'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CityDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { city: ICity, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.city.name}\n        </td>\n\n        <td>\n            <Link to={'/city/edit/' + props.city.id}>Edit</Link> |\n\n            <Link to={'/city/' + props.city.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst CityIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [cities, setCities] = useState([] as ICity[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICity>('/Cities', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCities(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Cities</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/city/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map(city =>\n                        <RowDisplay city={city} key={city.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CityIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CategoryCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCategory] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Categories';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/category')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>Category</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCategory({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CategoryName\" name=\"Input.CategoryName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/category'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CategoryCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CategoryDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [category, setCategory] = useState({} as ICategory || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICategory>('/Categories/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCategory(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/category/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>Category</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {category.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/category'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CategoryDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CategoryEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCategory] = useState({} as ICategory || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICategory>('/Categories/' + id, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCategory(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Categories/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/category')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>Category</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name || ''} onChange={e => setCategory({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CategoryName\" name=\"Input.CategoryName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/category'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CategoryEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICategory } from \"../../dto/ICategory\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { category: ICategory, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.category.name}\n        </td>\n\n        <td>\n            <Link to={'/category/edit/' + props.category.id}>Edit</Link> |\n\n            <Link to={'/category/' + props.category.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst CategoryIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [categories, setCategories] = useState([] as ICategory[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICategory>('/Categories', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCategories(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Category</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/category/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {categories.map(category =>\n                        <RowDisplay category={category} key={category.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CategoryIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>City</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [city, setCity] = useState({} as ICity || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/city/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>City</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {city.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/city'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CityDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({} as ICity || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>City</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name || ''} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { city: ICity, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.city.name}\n        </td>\n\n        <td>\n            <Link to={'/city/edit/' + props.city.id}>Edit</Link> |\n\n            <Link to={'/city/' + props.city.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst CityIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [cities, setCities] = useState([] as ICity[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICity>('/Cities', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCities(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Cities</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/city/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map(city =>\n                        <RowDisplay city={city} key={city.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CityIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CountyCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCounty] = useState({ name: ''});\n\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.name)\n\n        if(editData.name.length < 2 || editData.name.length > 128){\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n     \n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Counties';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/county')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n\n        }\n\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>County</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CountyName\" name=\"Input.CountyName\" placeholder={editData.name} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/county'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CountyCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CountyDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [county, setCounty] = useState({} as ICounty);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICounty>('/Counties/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/county/Edit/' + id)\n\n    }\n\n    const backClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/county')\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>County</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {county.name}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/county'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CountyDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nconst CountyEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCounty] = useState({} as ICounty || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICounty>('/Counties/' + id, appState.token!);\n\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.nameId)\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Counties/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/county')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>County</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name || ''} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CountyName\" name=\"Input.CountyName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/county'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CountyEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { count } from \"console\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\n\nconst RowDisplay = (props: { county: ICounty, role: string }) => (\n\n    <tr>\n        <td>\n            {props.county.name}\n        </td>\n\n\n        { props.role === 'Admin' ?\n            <>\n                <td>\n                    <Link to={'/county/edit/' + props.county.id}>Edit</Link> |\n                    <Link to={'/county/' + props.county.id}>Details</Link>\n                </td>\n\n            </>\n            :\n            <>\n                <td>\n                    <Link to={'/county/' + props.county.id}>Details</Link>\n                </td>\n            </>\n        }\n    </tr>\n);\n\n\n\nconst CountyIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [counties, setCounties] = useState([] as ICounty[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICounty>('/Counties', appState.token!);\n        console.log(appState);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounties(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n\n    return (\n        <>\n            <h1>Counties</h1>\n            {appState.token != null && role === 'Admin' ?\n\n                <p>\n                    <Link to={'/county/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {counties.map(county =>\n                        <RowDisplay county={county} key={county.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CountyIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>City</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [city, setCity] = useState({} as ICity || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/city/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>City</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {city.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/city'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CityDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({} as ICity || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>City</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name || ''} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { city: ICity, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.city.name}\n        </td>\n\n        <td>\n            <Link to={'/city/edit/' + props.city.id}>Edit</Link> |\n\n            <Link to={'/city/' + props.city.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst CityIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [cities, setCities] = useState([] as ICity[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICity>('/Cities', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCities(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Cities</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/city/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map(city =>\n                        <RowDisplay city={city} key={city.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CityIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CountyCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCounty] = useState({ name: ''});\n\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.name)\n\n        if(editData.name.length < 2 || editData.name.length > 128){\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n     \n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Counties';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/county')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n\n        }\n\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>County</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CountyName\" name=\"Input.CountyName\" placeholder={editData.name} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/county'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CountyCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CountyDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [county, setCounty] = useState({} as ICounty);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICounty>('/Counties/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/county/Edit/' + id)\n\n    }\n\n    const backClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/county')\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>County</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {county.name}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/county'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CountyDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nconst CountyEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCounty] = useState({} as ICounty || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICounty>('/Counties/' + id, appState.token!);\n\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.nameId)\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Counties/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/county')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>County</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name || ''} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CountyName\" name=\"Input.CountyName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/county'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CountyEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { count } from \"console\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\n\nconst RowDisplay = (props: { county: ICounty, role: string }) => (\n\n    <tr>\n        <td>\n            {props.county.name}\n        </td>\n\n\n        { props.role === 'Admin' ?\n            <>\n                <td>\n                    <Link to={'/county/edit/' + props.county.id}>Edit</Link> |\n                    <Link to={'/county/' + props.county.id}>Details</Link>\n                </td>\n\n            </>\n            :\n            <>\n                <td>\n                    <Link to={'/county/' + props.county.id}>Details</Link>\n                </td>\n            </>\n        }\n    </tr>\n);\n\n\n\nconst CountyIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [counties, setCounties] = useState([] as ICounty[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICounty>('/Counties', appState.token!);\n        console.log(appState);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounties(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n\n    return (\n        <>\n            <h1>Counties</h1>\n            {appState.token != null && role === 'Admin' ?\n\n                <p>\n                    <Link to={'/county/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {counties.map(county =>\n                        <RowDisplay county={county} key={county.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CountyIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CountyCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCounty] = useState({ name: ''});\n\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData.name)\n\n        if(editData.name.length < 2 || editData.name.length > 128){\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n     \n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Counties';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/county')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n\n        }\n\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>County</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCounty({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CountyName\" name=\"Input.CountyName\" placeholder={editData.name} autoComplete=\"current-name\" minLength={2}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/county'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CountyCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CountyDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [county, setCounty] = useState({} as ICounty);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICounty>('/Counties/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounty(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/county/Edit/' + id)\n\n    }\n\n    const backClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/county')\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>County</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {county.name}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/county'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CountyDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/pictures');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h2>Are you sure you want to delete this?</h2>\n            <h3>Picture</h3>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button>\n                        <p id=\"backToList\">\n                            <Link to={'/pictures'}>Back to List</Link>\n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default PictureDelete;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICounty } from \"../../dto/ICounty\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { count } from \"console\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\n\nconst RowDisplay = (props: { county: ICounty, role: string }) => (\n\n    <tr>\n        <td>\n            {props.county.name}\n        </td>\n\n\n        { props.role === 'Admin' ?\n            <>\n                <td>\n                    <Link to={'/county/edit/' + props.county.id}>Edit</Link> |\n                    <Link to={'/county/' + props.county.id}>Details</Link>\n                </td>\n\n            </>\n            :\n            <>\n                <td>\n                    <Link to={'/county/' + props.county.id}>Details</Link>\n                </td>\n            </>\n        }\n    </tr>\n);\n\n\n\nconst CountyIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [counties, setCounties] = useState([] as ICounty[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICounty>('/Counties', appState.token!);\n        console.log(appState);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCounties(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n\n    return (\n        <>\n            <h1>Counties</h1>\n            {appState.token != null && role === 'Admin' ?\n\n                <p>\n                    <Link to={'/county/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                        </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {counties.map(county =>\n                        <RowDisplay county={county} key={county.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CountyIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { IProduct } from \"../../dto/IProduct\";\n\n\nconst PictureCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setPicture] = useState({} as IPicture);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [productData, setProduct] = useState([] as IProduct[]);\n\n    let history = useHistory();\n   \n   \n\n    const loadData = async () => {\n        console.log(id)\n\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n\n    }\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n        if(typeof(editData.url) === 'undefined'){\n            setAlertMessage('url can not be empty!')\n        }\n\n        else if (editData.url.length < 2) {\n            setAlertMessage('The field Url must be a string or array type with a minimum length of 2.');\n        }\n        else if (typeof(editData.productName) === 'undefined') {\n            setAlertMessage('Product name can not be empty!');\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Pictures';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/pictures')\n            } else {\n                setAlertMessage('Error')\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n\n    }, []);\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>Picture</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Url</label>\n                                <input value={editData.url} onChange={e => setPicture({ ...editData, url: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">Product name</label>\n                                <select value={editData.productName} onChange={e => setPicture({ ...editData, productId: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    <option>---Please select---</option>\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.id}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/pictures'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default PictureCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/pictures/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>Picture</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div id=\"button\">\n                    <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                    <p id='backToList'>\n                        <Link to={'/pictures'}>Back to List</Link>\n                    </p>\n                </div>\n\n            </dl>\n        </div >\n    );\n}\n\nexport default PictureDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/pictures');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h2>Are you sure you want to delete this?</h2>\n            <h3>Picture</h3>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button>\n                        <p id=\"backToList\">\n                            <Link to={'/pictures'}>Back to List</Link>\n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default PictureDelete;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { data } from \"jquery\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\nconst RowDisplay = (props: { picture: IPicture }) => (\n    <tr>\n        <td>\n            {props.picture.url}\n        </td>\n        <td>\n            {props.picture.productName}\n        </td>\n        <td>\n            <Link to={'/pictures/' + props.picture.id}>Details</Link> |\n            <Link to={'/pictures/edit/' + props.picture.id}>Edit</Link> |\n            <Link to={'/pictures/delete/' + props.picture.id}>Delete</Link>\n        </td>\n    </tr>\n);\n\n\nconst PictureIndex = () => {\n    const appState = useContext(AppContext);\n    const [pictures, setPictures] = useState([] as IPicture[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData  = async () => {\n       \n        console.log(appState)\n        let result = await BaseService.getAll<IPicture>('/Pictures', appState.token!);\n        console.log(result);\n        \n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPictures(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n        <h1>Pictures</h1>\n        {appState.token != null ?\n                <>\n                    <p>\n                        <Link to={'/pictures/create'}>Create</Link> \n                    </p>\n\n                </>\n                :\n                <>\n                </>\n            }\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>\n                      Url\n                    </th>\n                    <th>\n                      Product Name\n                    </th>\n                    \n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {pictures.map(picture =>\n                    <RowDisplay picture={picture} key={picture.id} />)\n                }\n            </tbody>\n        </table>\n        <Loader {...pageStatus} />\n    </>\n\n    );\n}\n\nexport default PictureIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { IProduct } from \"../../dto/IProduct\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nconst PictureEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setPicture] = useState({} as IPicture);\n    const [productData, setProduct] = useState([] as IProduct[]);\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n        let productResult = await BaseService.getAll<IProduct>('/Products', appState.token!);\n\n\n        if (productResult.ok && productResult.data) {\n            setProduct(productResult.data);\n        }\n        else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: productResult.statusCode });\n        }\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n\n\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.url.length < 2) {\n            setAlertMessage('The field Url must be a string or array type with a minimum length of 2.');\n        }\n        if (editData.productName?.length! < 1) {\n            setAlertMessage('Product name is empty!');\n        }\n        setAlertMessage('');\n        console.log(editData)\n\n        const url = '/Pictures/' + id;\n        let response = await BaseService.edit(url, editData, appState.token!);\n\n        console.log(response)\n        if (response.statusCode >= 200 && response.statusCode < 400) {\n            history.push('/pictures')\n        } else {\n            setAlertMessage(response.messages![0]);\n       \n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>Picture</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Url</label>\n                                <input value={editData.url || ''} onChange={e => setPicture({ ...editData, url: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_Url\" name=\"Input.Url\" autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"formSelect\">Product name</label>\n                                <select value={editData.productName || ''} onChange={e => setPicture({ ...editData, productName: e.target.value })} className=\"form-control\" id=\"formSelect\">\n                                    {productData.map(product =>\n                                        <option key={product.id} value={product.description || ''}>{product.description}</option>\n                                    )};\n\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                            </div>\n                            <p>\n                                <Link to={'/pictures'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default PictureEdit;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>City</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [city, setCity] = useState({} as ICity || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/city/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>City</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {city.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/city'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CityDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/pictures');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h2>Are you sure you want to delete this?</h2>\n            <h3>Picture</h3>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button>\n                        <p id=\"backToList\">\n                            <Link to={'/pictures'}>Back to List</Link>\n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default PictureDelete;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { city: ICity, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.city.name}\n        </td>\n\n        <td>\n            <Link to={'/city/edit/' + props.city.id}>Edit</Link> |\n\n            <Link to={'/city/' + props.city.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst CityIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [cities, setCities] = useState([] as ICity[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICity>('/Cities', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCities(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Cities</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/city/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map(city =>\n                        <RowDisplay city={city} key={city.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CityIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setCity] = useState({} as ICity || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Cities/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/city')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>City</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name || ''} onChange={e => setCity({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_CityName\" name=\"Input.CityName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/city'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default CityEdit;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst UnitCreate = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setUnit] = useState({ name: ''});\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n\n\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Units';\n            let response = await BaseService.post(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/unit')\n            } else {\n                setAlertMessage(response.messages![0]);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n    }, []);\n\n\n    return (\n        <>\n            <h2>Create</h2 >\n            <h3>Unit</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name} onChange={e => setUnit({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_UnitName\" name=\"InputUnitName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/unit'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default UnitCreate;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst UnitDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [unit, setUnit] = useState({} as IUnit || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IUnit>('/Units/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUnit(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/unit/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>Unit</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {unit.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/unit'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default UnitDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst UnitEdit = () => {\n\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [editData, setUnit] = useState({} as IUnit || '');\n    const [alertMessage, setAlertMessage] = useState('');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IUnit>('/Units/' + id, appState.token!);\n\n        console.log(result.data)\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUnit(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    const submitClicked = async (e: Event) => {\n\n        e.preventDefault();\n\n        console.log(editData)\n        if (editData.name.length < 2 || editData.name.length > 128) {\n            setAlertMessage('The field Name must be a string or array type with a minimum length of 2.');\n\n        } else {\n            setAlertMessage('');\n            console.log(editData)\n\n            const url = '/Units/' + id;\n            let response = await BaseService.edit(url, editData, appState.token!);\n\n            console.log(response)\n            if (response.statusCode >= 200 && response.statusCode < 400) {\n                history.push('/unit')\n            } else {\n                setAlertMessage(\"Error\");\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n\n    return (\n        <>\n            <h2> Edit</h2 >\n            <h3>Unit</h3>\n            <form onSubmit={(e) => submitClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input value={editData.name || ''} onChange={e => setUnit({ ...editData, name: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_UnitName\" name=\"Input.UnitName\" placeholder={editData.name} autoComplete=\"current-name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => submitClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                            <p>\n                                <Link to={'/unit'}>Back to List</Link>\n                            </p>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default UnitEdit;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IUnit } from \"../../dto/IUnit\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { unit: IUnit, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.unit.name}\n        </td>\n\n        <td>\n            <Link to={'/unit/edit/' + props.unit.id}>Edit</Link> |\n\n            <Link to={'/unit/' + props.unit.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst UnitIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [units, setUnits] = useState([] as IUnit[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<IUnit>('/Units', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setUnits(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Units</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/unit/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {units.map(unit =>\n                        <RowDisplay unit={unit} key={unit.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default UnitIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/pictures');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h2>Are you sure you want to delete this?</h2>\n            <h3>Picture</h3>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button>\n                        <p id=\"backToList\">\n                            <Link to={'/pictures'}>Back to List</Link>\n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default PictureDelete;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [city, setCity] = useState({} as ICity || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/city/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>City</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {city.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/city'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CityDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { city: ICity, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.city.name}\n        </td>\n\n        <td>\n            <Link to={'/city/edit/' + props.city.id}>Edit</Link> |\n\n            <Link to={'/city/' + props.city.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst CityIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [cities, setCities] = useState([] as ICity[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICity>('/Cities', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCities(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Cities</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/city/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map(city =>\n                        <RowDisplay city={city} key={city.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CityIndex;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { IPicture } from \"../../dto/IPicture\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst PictureDelete = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [picture, setPicture] = useState({} as IPicture);\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setPicture(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const deleteClicked = async (e: Event) => {\n\n        e.preventDefault();\n        let result = await BaseService.delete<IPicture>('/Pictures/' + id, appState.token!);\n\n\n        if (result.ok ) {\n            history.push('/pictures');\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n     \n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h2>Are you sure you want to delete this?</h2>\n            <h3>Picture</h3>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Url</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.url}\n                </dd>\n                <dt className=\"col-sm-2\">Product name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {picture.productName}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                    <div id=\"button\">\n                        <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button>\n                        <p id=\"backToList\">\n                            <Link to={'/pictures'}>Back to List</Link>\n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default PictureDelete;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CityDetails = () => {\n\n    //get the router params\n    let { id } = useParams() as IRouteId;\n    const appState = useContext(AppContext);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n    const [city, setCity] = useState({} as ICity || '');\n    let history = useHistory();\n\n    const loadData = async () => {\n        console.log(id)\n\n        let result = await BaseService.get<ICity>('/Cities/' + id, appState.token!);\n\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCity(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n\n    const editClicked = async (e: Event) => {\n\n        e.preventDefault();\n        history.push('/city/Edit/' + id)\n\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n    return (\n        <div>\n            <h3>Details</h3>\n            <h4>City</h4>\n            <hr />\n            <dl className=\"row\">\n                <dt className=\"col-sm-2\">Name</dt>\n\n                <dd className=\"col-sm-10\">\n                    {city.name || ''}\n                </dd>\n                <hr />\n\n                <div className=\"form-group\" >\n                <div id=\"button\">\n                        <button onClick={(e) => editClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Edit</button>\n                        <p id='backToList'>\n                        <Link to={'/city'}>Back to List</Link> \n                        </p>\n                    </div>\n\n                </div>\n\n            </dl>\n        </div>\n    );\n}\n\nexport default CityDetails;","import { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { ICity } from \"../../dto/ICity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext, IAppState, initialAppState } from \"../../context/AppContext\";\n\n\nconst RowDisplay = (props: { city: ICity, role: string }, appState: any) => (\n    <tr>\n        <td>\n            {props.city.name}\n        </td>\n\n        <td>\n            <Link to={'/city/edit/' + props.city.id}>Edit</Link> |\n\n            <Link to={'/city/' + props.city.id}>Details</Link>\n        </td>\n    </tr>\n);\n\n\nconst CityIndex = () => {\n\n    const appState = useContext(AppContext);\n    const [cities, setCities] = useState([] as ICity[] || '');\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<ICity>('/Cities', appState.token!);\n        console.log(result);\n        console.log(appState)\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setCities(result.data);\n        } else {\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n\n    }\n    useEffect(() => {\n        loadData();\n    }, []);\n    let role: string = '';\n    if (appState.token != null) {\n        const info = JSON.parse(atob(appState.token!.split('.')[1]));\n        role = info[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    }\n\n    return (\n        <>\n            <h1>Cities</h1>\n\n            {role === 'Admin' ?\n\n                <p>\n                    <Link to={'/city/create'}>Create</Link>\n                </p>\n\n                :\n                <>\n                </>\n            }\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                    </th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {cities.map(city =>\n                        <RowDisplay city={city} key={city.id} role={role} />)\n                    }\n                </tbody>\n            </table>\n            <Loader {...pageStatus} />\n        </>\n\n    );\n}\n\nexport default CityIndex;","const HomeIndex = () => {\n    return (\n        <div>Home</div>\n    );\n}\n\nexport default HomeIndex;","import { ILoginResponse } from './../types/ILoginResponse';\nimport Axios, { AxiosError } from 'axios';\nimport { ApiBaseUrl } from '../configuration';\nimport { IFetchResponse } from '../types/IFetchResponse';\nimport { IMessages } from '../types/IMessages';\n\nexport abstract class IdentityService {\n    protected static axios = Axios.create({\n        baseURL: ApiBaseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    static async Login(apiEndpoint: string, loginData: {email: string, password:string}): Promise<IFetchResponse<ILoginResponse>> {\n        let loginDataJson = JSON.stringify(loginData);\n        try {\n            let response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson);\n            console.log(response)\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n    static async register(apiEndpoint: string, loginData: {email: string, password:string, firstName: string, lastName: string}):  Promise<IFetchResponse<ILoginResponse>>{\n     \n     \n        let loginDataJson = JSON.stringify(loginData);\n        \n        try {\n           \n            const response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson);\n\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n}\n","import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { IdentityService } from \"../../services/identity-service\";\n\nconst Login = () => {\n    const appState = useContext(AppContext);\n\n    const [loginData, setLoginData] = useState({ email: '', password: '' });\n    const [alertMessage, setAlertMessage] = useState('');\n\n    const logInClicked = async (e: Event) => {\n        e.preventDefault();\n        if (loginData.email === '' || loginData.password === '') {\n            setAlertMessage('Empty email or password!');\n        } else {\n\n\n            setAlertMessage('');\n            let response = await IdentityService.Login('Account/Login', loginData);\n\n            console.log(response)\n            if (!response.ok) {\n                console.log(response)\n                setAlertMessage(response.messages![0]);\n            } else {\n                setAlertMessage('');\n\n\n                appState.setAuthInfo(response.data!.token, response.data!.firstname, response.data!.lastname);\n            }\n        }\n    }\n\n    return (\n        <>\n            { appState.token !== null ? <Redirect to=\"/\" /> : null}\n            <h1>Log in</h1>\n            <form onSubmit={(e) => logInClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Email\">Email</label>\n                                <input value={loginData.email} onChange={e => setLoginData({ ...loginData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\" placeholder=\"user@example.com\" autoComplete=\"username\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Password\">Password</label>\n                                <input value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"Input your current password...\" autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => logInClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Log in</button>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default Login;\n","import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { IdentityService } from \"../../services/identity-service\";\n\nconst Register = () => {\n    const appState = useContext(AppContext);\n\n    const [registerData, setRegisterData] = useState({ email: '', password: '', firstName: '', lastName: '' });\n    const [alertMessage, setAlertMessage] = useState('');\n    const [confirm, setConfirm] = useState({confirmPassword: ''});\n\n    const regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n\n\n    const registerClicked = async (e: Event) => {\n        e.preventDefault();\n\n\n        if (registerData.email === '' || !regexEmail.test(registerData.email)) {\n            setAlertMessage('Email not valid!');\n        }\n        else if (registerData.firstName === '' || registerData.lastName === '') {\n            setAlertMessage('First name or Last name can not be empty');\n        } else if (registerData.password != confirm.confirmPassword){\n            setAlertMessage('Passwords do not match!');\n        }else {\n            let response = await IdentityService.register('account/register', registerData);\n            if (!response.ok) {\n                setAlertMessage(response.messages![0]);\n            } else {\n                setAlertMessage('');\n\n\n                appState.setAuthInfo(response.data!.token, response.data!.firstname, response.data!.lastname);\n            }\n        }\n    }\n\n    return (\n        <>\n            { appState.token !== null ? <Redirect to=\"/\" /> : null}\n            <h1>Register</h1>\n            <form onSubmit={(e) => registerClicked(e.nativeEvent)}>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_FirstName\">First name</label>\n                                <input value={registerData.firstName} onChange={e => setRegisterData({ ...registerData, firstName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_FirstName\" name=\"Input.FirstName\" placeholder=\"First name...\" autoComplete=\"current-firstName\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_LastName\">Last name</label>\n                                <input value={registerData.lastName} onChange={e => setRegisterData({ ...registerData, lastName: e.target.value })} className=\"form-control\" type=\"text\" id=\"Input_LastName\" name=\"Input.LastName\" placeholder=\"Last name...\" autoComplete=\"current-lastName\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Email\">Email</label>\n                                <input value={registerData.email} onChange={e => setRegisterData({ ...registerData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\" placeholder=\"user@example.com\" autoComplete=\"username\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Password\">Password</label>\n                                <input value={registerData.password} onChange={e => setRegisterData({ ...registerData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" placeholder=\"Insert your password...\" autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_ConfirmPassword\">Confirm Password</label>\n                                <input value={confirm.confirmPassword} onChange={e => setConfirm({ ...registerData, confirmPassword: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_ConfirmPassword\" name=\"Input.ConfirmPassword\" placeholder=\"Confirm your password...\" autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => registerClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Register</button>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default Register;\n","const Page404 = () => {\n    return (\n        <div>Page not found - 404!</div>\n    );\n}\n\nexport default Page404;\n","import { useState } from \"react\";\n\ninterface IFormValues {\n    input: string;\n    checkbox: boolean;\n    radio: string;\n    textarea: string;\n    select: string;\n}\n\nexport interface IFormProps {\n    values: IFormValues;\n\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\n}\n\nconst FormView = (props: IFormProps) => {\n    return (\n        <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"formInputText\">Text</label>\n                <input value={props.values.input} onChange={(e) => props.handleChange(e.target)} type=\"text\" className=\"form-control\" id=\"formInputText\" />\n            </div>\n            <div className=\"form-group form-check\">\n                <input checked={props.values.checkbox} onChange={(e) => props.handleChange(e.target)} type=\"checkbox\" className=\"form-check-input\" id=\"formInputCheckBox\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">CheckBox</label>\n            </div>\n\n            <div className=\"form-check\">\n                <input checked={props.values.radio === 'checked1'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\" id=\"formInputRadio1\" value=\"checked1\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio1\">\n                    Radio 1\n                </label>\n            </div>\n            <div className=\"form-check\">\n                <input checked={props.values.radio === 'checked2'} onChange={(e) => props.handleChange(e.target)} className=\"form-check-input\" type=\"radio\"id=\"formInputRadio2\" value=\"checked2\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio2\">\n                    Radio 2\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"formTextArea\">Textarea</label>\n                <textarea value={props.values.textarea} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formTextArea\" rows={3}></textarea>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"formSelect\">Example select</label>\n                <select value={props.values.select} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" id=\"formSelect\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n    );\n}\nconst initialFormValues: IFormValues = {\n    input: '',\n    checkbox: false,\n    radio: '',\n    textarea: '',\n    select: '',\n};\n\n\n\nconst PageForm = () => {\n    const [formValues, setFormValues] = useState(initialFormValues);\n\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\n        // todo: update form value\n        console.log(target);\n\n        if (target.id === 'formInputText') {\n            setFormValues({ ...formValues, input: target.value });\n            return;\n        }\n        if (target.id === 'formInputCheckBox') {\n            setFormValues({ ...formValues, checkbox: (target as HTMLInputElement).checked });\n            return;\n        }\n        if (target.id === 'formInputRadio1') {\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\n            return;\n        }\n        if (target.id === 'formInputRadio2') {\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\n            return;\n        }\n        if (target.id === 'formTextArea') {\n            setFormValues({ ...formValues, textarea: target.value });\n            return;\n        }\n        if (target.id === 'formSelect') {\n            setFormValues({ ...formValues, select: target.value });\n            return;\n        }\n    }\n\n\n    return <FormView values={formValues} handleChange={handleChange} />\n};\n\nexport default PageForm;\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport PictureCreate from './containers/pictures/Create';\nimport PictureDelete from './containers/pictures/Delete';\nimport PictureDetails from './containers/pictures/Details';\nimport PictureEdit from './containers/pictures/Edit';\nimport PictureIndex from './containers/pictures/Index';\n\nimport BookingCreate from './containers/booking/Create';\nimport BookingDetails from './containers/booking/Details';\nimport BookingIndex from './containers/booking/Index';\n\nimport CategoryCreate from './containers/category/Create';\nimport CategoryDetails from './containers/category/Details';\nimport CategoryEdit from './containers/category/Edit';\nimport CategoryIndex from './containers/category/Index';\n\nimport ConditionCreate from './containers/condition/Create';\nimport ConditionDetails from './containers/condition/Details';\nimport ConditionEdit from './containers/condition/Edit';\nimport ConditionIndex from './containers/condition/Index';\n\nimport CountyCreate from './containers/county/Create';\nimport CountyDetails from './containers/county/Details';\nimport CountyEdit from './containers/county/Edit';\nimport CountyIndex from './containers/county/Index';\n\nimport CityCreate from './containers/city/Create';\nimport CityDetails from './containers/city/Details';\nimport CityEdit from './containers/city/Edit';\nimport CityIndex from './containers/city/Index';\n\nimport MaterialCreate from './containers/material/Create';\nimport MaterialDetails from './containers/material/Details';\nimport MaterialEdit from './containers/material/Edit';\nimport MaterialIndex from './containers/material/Index';\n\nimport MessageFormCreate from './containers/messageForm/Create';\nimport MessageFormDetails from './containers/messageForm/Details';\nimport MessageFormDelete from './containers/messageForm/Delete';\nimport MessageFormIndex from './containers/messageForm/Index';\n\nimport ProductMaterialCreate from './containers/productMaterial/Create';\nimport ProductMaterialDetails from './containers/productMaterial/Details';\nimport ProductMaterialDelete from './containers/productMaterial/Delete';\nimport ProductMaterialIndex from './containers/productMaterial/Index';\nimport ProductMaterialEdit from './containers/productMaterial/Edit';\n\n\nimport ProductCreate from './containers/products/Create';\nimport ProductDetails from './containers/products/Details';\nimport ProductDelete from './containers/products/Delete';\nimport ProductIndex from './containers/products/Index';\nimport ProductEdit from './containers/products/Edit';\n\nimport UnitCreate from './containers/unit/Create';\nimport UnitDetails from './containers/unit/Details';\nimport UnitEdit from './containers/unit/Edit';\nimport UnitIndex from './containers/unit/Index';\n\nimport UserBookedProductsDelete from './containers/userBooked-Products/Delete';\nimport UserBookedProductsDetails from './containers/userBooked-Products/Details';\nimport UserBookedProductsIndex from './containers/userBooked-Products/Index';\n\nimport UserMessagesDelete from './containers/userMessages/Delete';\nimport UserMessagesDetails from './containers/userMessages/Details';\nimport UserMessagesIndex from './containers/userMessages/Index';\n\n\nimport HomeIndex from './containers/home/HomeIndex';\n\nimport Login from './containers/identity/Login';\nimport Register from './containers/identity/Register';\nimport Page404 from './containers/Page404';\nimport PageForm from './containers/PageForm';\nimport { AppContextProvider, initialAppState } from './context/AppContext';\n\nfunction App() {\n    const setAuthInfo = (token: string | null, firstName: string, lastName: string): void => {\n        setAppState({...appState, token, firstName, lastName});\n    }\n\n    const [appState, setAppState] = useState({...initialAppState, setAuthInfo });\n\n    return (\n        <>\n            <AppContextProvider value={appState} >\n                <Header />\n                <div className=\"container\">\n                    <main role=\"main\" className=\"pb-3\">\n                        <Switch>\n                            <Route exact path=\"/\" component={HomeIndex} />\n                 \n\n                            <Route path=\"/form\" component={PageForm} />\n\n                            <Route path=\"/identity/login\" component={Login} />\n                            <Route path=\"/identity/register\" component={Register} />\n\n\n                            <Route path=\"/pictures/create\" component={PictureCreate} />\n                            <Route path=\"/pictures/edit/:id\" component={PictureEdit} />\n                            <Route path=\"/pictures/delete/:id\" component={PictureDelete} />\n                            <Route path=\"/pictures/:id\" component={PictureDetails} />\n                            <Route path=\"/pictures\" component={PictureIndex} />\n\n                            <Route path=\"/city/create\" component={CityCreate} />\n                            <Route path=\"/city/edit/:id\" component={CityEdit} />\n                            <Route path=\"/city/:id\" component={CityDetails} />\n                            <Route path=\"/city\" component={CityIndex} />\n\n                            <Route path=\"/booking/create\" component={BookingCreate} />\n                            <Route path=\"/booking/:id\" component={BookingDetails} />\n                            <Route path=\"/booking\" component={BookingIndex} />\n\n                            <Route path=\"/category/create\" component={CategoryCreate} />\n                            <Route path=\"/category/edit/:id\" component={CategoryEdit} />\n                            <Route path=\"/category/:id\" component={CategoryDetails} />\n                            <Route path=\"/category\" component={CategoryIndex} />\n\n                            <Route path=\"/condition/create\" component={ConditionCreate} />\n                            <Route path=\"/condition/edit/:id\" component={ConditionEdit} />\n                            <Route path=\"/condition/:id\" component={ConditionDetails} />\n                            <Route path=\"/condition\" component={ConditionIndex} />\n\n                            <Route path=\"/county/create\" component={CountyCreate} />\n                            <Route path=\"/county/edit/:id\" component={CountyEdit} />\n                            <Route path=\"/county/:id\" component={CountyDetails} />\n                            <Route path=\"/county\" component={CountyIndex} />\n\n                            <Route path=\"/material/create\" component={MaterialCreate} />\n                            <Route path=\"/material/edit/:id\" component={MaterialEdit} />\n                            <Route path=\"/material/:id\" component={MaterialDetails} />\n                            <Route path=\"/material\" component={MaterialIndex} />\n\n                            <Route path=\"/messageForm/create\" component={MessageFormCreate} />\n                            <Route path=\"/messageForm/delete/:id\" component={MessageFormDelete} />\n                            <Route path=\"/messageForm/:id\" component={MessageFormDetails} />\n                            <Route path=\"/messageForm\" component={MessageFormIndex} />\n\n                            <Route path=\"/productMaterial/create\" component={ProductMaterialCreate} />\n                            <Route path=\"/productMaterial/edit/:id\" component={ProductMaterialEdit} />\n                            <Route path=\"/productMaterial/delete/:id\" component={ProductMaterialDelete} />\n                            <Route path=\"/productMaterial/:id\" component={ProductMaterialDetails} />\n                            <Route path=\"/productMaterial\" component={ProductMaterialIndex} />\n\n                            <Route path=\"/products/create\" component={ProductCreate} />\n                            <Route path=\"/products/edit/:id\" component={ProductEdit} />\n                            <Route path=\"/products/delete/:id\" component={ProductDelete} />\n                            <Route path=\"/products/:id\" component={ProductDetails} />\n                            <Route path=\"/products\" component={ProductIndex} />\n\n                            <Route path=\"/unit/create\" component={UnitCreate} />\n                            <Route path=\"/unit/edit/:id\" component={UnitEdit} />\n                            <Route path=\"/unit/:id\" component={UnitDetails} />\n                            <Route path=\"/unit\" component={UnitIndex} />\n\n                            <Route path=\"/userBooked-Products/delete/:id\" component={UserBookedProductsDelete} />\n                            <Route path=\"/userBooked-Products/:id\" component={UserBookedProductsDetails} />\n                            <Route path=\"/userBooked-Products\" component={UserBookedProductsIndex} />\n\n                            <Route path=\"/userMessages/delete/:id\" component={UserMessagesDelete} />\n                            <Route path=\"/userMessages/:id\" component={UserMessagesDetails} />\n                            <Route path=\"/userMessages\" component={UserMessagesIndex} />\n\n                            <Route component={Page404} />\n                        </Switch>\n                    </main>\n                </div>\n                <Footer />\n            </AppContextProvider>\n        </>\n    );\n}\n\nexport default App;\n\n\n","import 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport './assets/site.css'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}